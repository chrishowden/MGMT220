<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' inline='true' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Cleaned_Road_Fatal_Aus2.0' name='excel-direct.153pr2f1mkq34o141ktfl0xqc10e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/howde/Documents/Repos/MGMT220/Assignment 2/Cleaned_Road_Fatal_Aus2.0.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Fatal_Crashes].[Crash ID]' />
              <expression op='[Fatalities].[Crash ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.153pr2f1mkq34o141ktfl0xqc10e' name='Fatal_Crashes' table='[Fatal_Crashes$]' type='table'>
            <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Crash ID' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='string' name='Dayweek' ordinal='2' />
              <column datatype='integer' name='Year' ordinal='3' />
              <column datatype='date' date-parse-format='MMMM/yyyy' name='Date' ordinal='4' />
              <column datatype='datetime' name='Time' ordinal='5' />
              <column datatype='string' name='Crash Type' ordinal='6' />
              <column datatype='integer' name='Number of Fatalities' ordinal='7' />
              <column datatype='string' name='Bus  Involvement' ordinal='8' />
              <column datatype='string' name='Rigid Truck  Involvement' ordinal='9' />
              <column datatype='string' name='Articulated Truck  Involvement' ordinal='10' />
              <column datatype='integer' name='Speed Limit' ordinal='11' />
              <column datatype='integer' name='Population' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.153pr2f1mkq34o141ktfl0xqc10e' name='Fatalities' table='[Fatalities$]' type='table'>
            <columns gridOrigin='A1:G10001:no:A1:G2147483647:0' header='yes' outcome='6'>
              <column datatype='integer' name='Crash ID' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='string' name='Road User' ordinal='3' />
              <column datatype='string' name='Gender' ordinal='4' />
              <column datatype='integer' name='Age' ordinal='5' />
              <column datatype='integer' name='Gender Population' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Age]' value='[Fatalities].[Age]' />
          <map key='[Articulated Truck  Involvement]' value='[Fatal_Crashes].[Articulated Truck  Involvement]' />
          <map key='[Bus  Involvement]' value='[Fatal_Crashes].[Bus  Involvement]' />
          <map key='[Crash ID (Fatalities)]' value='[Fatalities].[Crash ID]' />
          <map key='[Crash ID]' value='[Fatal_Crashes].[Crash ID]' />
          <map key='[Crash Type]' value='[Fatal_Crashes].[Crash Type]' />
          <map key='[Date]' value='[Fatal_Crashes].[Date]' />
          <map key='[Dayweek]' value='[Fatal_Crashes].[Dayweek]' />
          <map key='[Gender Population]' value='[Fatalities].[Gender Population]' />
          <map key='[Gender]' value='[Fatalities].[Gender]' />
          <map key='[Number of Fatalities]' value='[Fatal_Crashes].[Number of Fatalities]' />
          <map key='[Population]' value='[Fatal_Crashes].[Population]' />
          <map key='[Rigid Truck  Involvement]' value='[Fatal_Crashes].[Rigid Truck  Involvement]' />
          <map key='[Road User]' value='[Fatalities].[Road User]' />
          <map key='[Speed Limit]' value='[Fatal_Crashes].[Speed Limit]' />
          <map key='[State (Fatalities)]' value='[Fatalities].[State]' />
          <map key='[State]' value='[Fatal_Crashes].[State]' />
          <map key='[Time]' value='[Fatal_Crashes].[Time]' />
          <map key='[Year (Fatalities)]' value='[Fatalities].[Year]' />
          <map key='[Year]' value='[Fatal_Crashes].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M10001:no:A1:M10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crash ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Crash ID]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Crash ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dayweek</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Dayweek]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Dayweek</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crash Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Crash Type]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Crash Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Fatalities]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Number of Fatalities</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bus  Involvement</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Bus  Involvement]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Bus  Involvement</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rigid Truck  Involvement</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Rigid Truck  Involvement]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Rigid Truck  Involvement</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Articulated Truck  Involvement</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Articulated Truck  Involvement]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Articulated Truck  Involvement</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speed Limit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Speed Limit]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Speed Limit</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crash ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Crash ID (Fatalities)]</local-name>
            <parent-name>[Fatalities]</parent-name>
            <remote-alias>Crash ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (Fatalities)]</local-name>
            <parent-name>[Fatalities]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (Fatalities)]</local-name>
            <parent-name>[Fatalities]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Road User</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Road User]</local-name>
            <parent-name>[Fatalities]</parent-name>
            <remote-alias>Road User</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Fatalities]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[Fatalities]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Gender Population]</local-name>
            <parent-name>[Fatalities]</parent-name>
            <remote-alias>Gender Population</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Fatalities]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G10001:no:A1:G2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Age]' new-bin='true'>
          <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
            <value>26</value>
            <value>27</value>
            <value>28</value>
            <value>29</value>
            <value>30</value>
            <value>31</value>
            <value>32</value>
            <value>33</value>
            <value>34</value>
            <value>35</value>
            <value>36</value>
          </bin>
          <bin default-name='false' value='&quot;Adults (37 - 46)&quot;'>
            <value>37</value>
            <value>38</value>
            <value>39</value>
            <value>40</value>
            <value>41</value>
            <value>42</value>
            <value>43</value>
            <value>44</value>
            <value>45</value>
            <value>46</value>
          </bin>
          <bin default-name='false' value='&quot;Adults (47 - 54)&quot;'>
            <value>47</value>
            <value>48</value>
            <value>49</value>
            <value>50</value>
            <value>51</value>
            <value>52</value>
            <value>53</value>
            <value>54</value>
          </bin>
          <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
            <value>55</value>
            <value>56</value>
            <value>57</value>
            <value>58</value>
            <value>59</value>
            <value>60</value>
            <value>61</value>
            <value>62</value>
            <value>63</value>
            <value>64</value>
            <value>65</value>
            <value>66</value>
            <value>67</value>
            <value>68</value>
            <value>69</value>
            <value>70</value>
          </bin>
          <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
            <value>7</value>
            <value>8</value>
            <value>9</value>
            <value>10</value>
            <value>11</value>
            <value>12</value>
            <value>13</value>
            <value>14</value>
            <value>15</value>
          </bin>
          <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
            <value>0</value>
            <value>1</value>
            <value>2</value>
            <value>3</value>
            <value>4</value>
            <value>5</value>
            <value>6</value>
          </bin>
          <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
            <value>71</value>
            <value>72</value>
            <value>73</value>
            <value>74</value>
            <value>75</value>
            <value>76</value>
            <value>77</value>
            <value>78</value>
            <value>79</value>
            <value>80</value>
            <value>81</value>
            <value>82</value>
            <value>83</value>
            <value>84</value>
            <value>85</value>
            <value>86</value>
            <value>87</value>
            <value>88</value>
            <value>89</value>
            <value>90</value>
            <value>91</value>
            <value>92</value>
            <value>93</value>
            <value>94</value>
            <value>95</value>
            <value>96</value>
            <value>97</value>
            <value>98</value>
            <value>99</value>
            <value>100</value>
            <value>101</value>
          </bin>
          <bin default-name='false' value='&quot;Young Adults (16 - 25)&quot;'>
            <value>16</value>
            <value>17</value>
            <value>18</value>
            <value>19</value>
            <value>20</value>
            <value>21</value>
            <value>22</value>
            <value>23</value>
            <value>24</value>
            <value>25</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column caption='Fatalities per 100,000' datatype='real' name='[Calculation_1219349647389655054]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Fatalities])/MEDIAN([Population]) *100000' />
      </column>
      <column caption='Gender Fatalities per 100,000' datatype='real' name='[Calculation_2160039020159533057]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Fatalities])/MEDIAN([Gender Population]) *100000' />
      </column>
      <column datatype='integer' name='[Crash ID]' role='dimension' type='ordinal' />
      <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='string' name='[Road User]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Bicyclist (includes pillion passengers)&quot;' value='Bicyclist' />
          <alias key='&quot;Motorcycle pillion passenger&quot;' value='Motorbike Passenger' />
          <alias key='&quot;Motorcycle rider&quot;' value='Motorbike Rider' />
        </aliases>
      </column>
      <column datatype='string' name='[State (Fatalities)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' hidden='true' name='[State1]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Avg' name='[diff:avg:Population:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[diff:avg:Population:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[diff:avg:Population:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[diff:med:Population:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Number of Fatalities]' derivation='Sum' name='[diff:sum:Number of Fatalities:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='RowInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Number of Fatalities]' derivation='Sum' name='[diff:sum:Number of Fatalities:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Number of Fatalities]' derivation='Sum' name='[diff:sum:Number of Fatalities:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:10]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' ordering-type='Field' type='Difference'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:11]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' ordering-type='Field' type='Difference'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:12]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' />
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:13]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:14]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:15]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='Difference'>
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:16]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' ordering-type='Field' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:17]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' ordering-type='Field' type='Difference'>
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='RowInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' ordering-type='Field' type='Difference'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' ordering-type='Field' type='Difference'>
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' ordering-type='Field' type='Difference'>
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='Difference'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Number of Fatalities]' derivation='Median' name='[med:Number of Fatalities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Median' name='[med:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Median' name='[med:Population:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Population]' derivation='Median' name='[pcdf:med:Population:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcdf:med:Population:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>&quot;NSW&quot;</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcdf:med:Population:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>&quot;WA&quot;</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcdf:med:Population:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[pcdf:usr:Calculation_1219349647389655054:qk:10]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' ordering-type='Field' type='PctDiff'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' />
          <sort direction='ASC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Age:qk]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[pcdf:usr:Calculation_1219349647389655054:qk:11]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' ordering-type='Field' type='PctDiff'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' />
          <sort direction='DESC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Age:qk]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[pcdf:usr:Calculation_1219349647389655054:qk:12]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[pcdf:usr:Calculation_1219349647389655054:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[pcdf:usr:Calculation_1219349647389655054:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[pcdf:usr:Calculation_1219349647389655054:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Field' type='PctDiff'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[pcdf:usr:Calculation_1219349647389655054:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' ordering-type='Field' type='PctDiff'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[pcdf:usr:Calculation_1219349647389655054:qk:5]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[pcdf:usr:Calculation_1219349647389655054:qk:6]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' ordering-type='Field' type='PctDiff'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' />
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[pcdf:usr:Calculation_1219349647389655054:qk:7]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' ordering-type='Field' type='PctDiff'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' />
          <address>
            <value>2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[pcdf:usr:Calculation_1219349647389655054:qk:8]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' ordering-type='Field' type='PctDiff'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[pcdf:usr:Calculation_1219349647389655054:qk:9]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' level-address='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' ordering-type='Field' type='PctDiff'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Gender]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' />
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[pcdf:usr:Calculation_1219349647389655054:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[pcto:avg:Population:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[pcto:avg:Population:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[pcto:avg:Population:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[pcto:avg:Population:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[pcto:avg:Population:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Count' name='[pcto:cnt:Population:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:10]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State:nk]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Pane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:9]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Sum' name='[pcto:sum:Population:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[rank:med:Population:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Age]' derivation='Sum' name='[sum:Age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Fatalities]' derivation='Sum' name='[sum:Number of Fatalities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[usr:Calculation_1219349647389655054:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Age Groups,Gender)' hidden='true' name='[Action (Age Groups,Gender)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Age (group)]' />
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <group caption='Action (Age Groups,Road User)' hidden='true' name='[Action (Age Groups,Road User)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Age (group)]' />
          <groupfilter function='level-members' level='[Road User]' />
        </groupfilter>
      </group>
      <group caption='Action (Gender,Road User)' hidden='true' name='[Action (Gender,Road User)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
          <groupfilter function='level-members' level='[Road User]' />
        </groupfilter>
      </group>
      <group caption='Action (Road User)' hidden='true' name='[Action (Road User)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Road User]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Gender,Road User)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
          <groupfilter function='level-members' level='[none:Road User:nk]' />
        </groupfilter>
      </group>
      <group name='[Road User &amp; Gender (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Road User]' />
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/howde/Documents/Repos/MGMT220/Tableau/Aus_Fatal_Crash.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/04/2018 03:40:29 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Age]' value='[Extract].[Age]' />
            <map key='[Articulated Truck  Involvement]' value='[Extract].[Articulated Truck  Involvement]' />
            <map key='[Bus  Involvement]' value='[Extract].[Bus  Involvement]' />
            <map key='[Crash ID (Fatalities)]' value='[Extract].[Crash ID]' />
            <map key='[Crash ID]' value='[Extract].[Crash ID1]' />
            <map key='[Crash Type]' value='[Extract].[Crash Type]' />
            <map key='[Date]' value='[Extract].[Date]' />
            <map key='[Dayweek]' value='[Extract].[Dayweek]' />
            <map key='[Gender Population]' value='[Extract].[Gender Population]' />
            <map key='[Gender]' value='[Extract].[Gender]' />
            <map key='[Number of Fatalities]' value='[Extract].[Number of Fatalities]' />
            <map key='[Population]' value='[Extract].[Population]' />
            <map key='[Rigid Truck  Involvement]' value='[Extract].[Rigid Truck  Involvement]' />
            <map key='[Road User]' value='[Extract].[Road User]' />
            <map key='[Speed Limit]' value='[Extract].[Speed Limit]' />
            <map key='[State (Fatalities)]' value='[Extract].[State]' />
            <map key='[State]' value='[Extract].[State1]' />
            <map key='[Time]' value='[Extract].[Time]' />
            <map key='[Year (Fatalities)]' value='[Extract].[Year]' />
            <map key='[Year]' value='[Extract].[Year1]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='49249' timestamp-start='2018-10-04 03:40:29.308' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Crash ID1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Crash ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Crash ID1</remote-alias>
              <ordinal>0</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49249</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State1</remote-alias>
              <ordinal>1</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dayweek</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Dayweek]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dayweek</remote-alias>
              <ordinal>2</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year1</remote-alias>
              <ordinal>3</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>4</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>360</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Time</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Time</remote-alias>
              <ordinal>5</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>380</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Crash Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Crash Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Crash Type</remote-alias>
              <ordinal>6</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Fatalities</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Fatalities]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Fatalities</remote-alias>
              <ordinal>7</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Bus  Involvement</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Bus  Involvement]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Bus  Involvement</remote-alias>
              <ordinal>8</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rigid Truck  Involvement</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Rigid Truck  Involvement]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rigid Truck  Involvement</remote-alias>
              <ordinal>9</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Articulated Truck  Involvement</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Articulated Truck  Involvement]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Articulated Truck  Involvement</remote-alias>
              <ordinal>10</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Speed Limit</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Speed Limit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Speed Limit</remote-alias>
              <ordinal>11</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>12</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>180</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Crash ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Crash ID (Fatalities)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Crash ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Fatalities</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49249</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State (Fatalities)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>14</ordinal>
              <family>Fatalities</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year (Fatalities)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>15</ordinal>
              <family>Fatalities</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Road User</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Road User]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Road User</remote-alias>
              <ordinal>16</ordinal>
              <family>Fatalities</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>17</ordinal>
              <family>Fatalities</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Age</remote-alias>
              <ordinal>18</ordinal>
              <family>Fatalities</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>90</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Gender Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender Population</remote-alias>
              <ordinal>19</ordinal>
              <family>Fatalities</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>290</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.521173' measure-ordering='alphabetic' measure-percentage='0.478827' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>1997</bucket>
            </map>
            <map to='#499894'>
              <bucket>2017</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1989</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2009</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1993</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2013</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2001</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1998</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2018</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1994</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2014</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>2007</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1990</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2010</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2005</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1995</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2015</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2002</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2003</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2006</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>2008</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1999</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1996</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2016</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1991</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2011</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2004</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2000</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1992</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2012</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;ACT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SA&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;QLD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VIC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NT&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;TAS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NSW&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[avg:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:avg:Population:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:avg:Population:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:avg:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:med:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:10]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:11]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:12]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:13]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:14]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:15]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:16]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:17]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:7]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:8]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:9]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[med:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[med:Population:vtsum:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:med:Population:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:med:Population:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:med:Population:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:med:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:usr:Calculation_1219349647389655054:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:usr:Calculation_1219349647389655054:qk:10]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:usr:Calculation_1219349647389655054:qk:11]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:usr:Calculation_1219349647389655054:qk:12]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:usr:Calculation_1219349647389655054:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:usr:Calculation_1219349647389655054:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:usr:Calculation_1219349647389655054:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:usr:Calculation_1219349647389655054:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:usr:Calculation_1219349647389655054:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:usr:Calculation_1219349647389655054:qk:7]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:usr:Calculation_1219349647389655054:qk:8]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:usr:Calculation_1219349647389655054:qk:9]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:usr:Calculation_1219349647389655054:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:avg:Population:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:avg:Population:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:avg:Population:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:avg:Population:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:avg:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:cnt:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:10]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:7]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:8]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:9]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[rank:med:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:sum:Number of Fatalities:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:sum:Number of Fatalities:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:sum:Number of Fatalities:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[med:Number of Fatalities:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Calculation_748442005316952067:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Age (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Infants (0 - 6)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adults (37 - 46)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Adults (26 - 36)&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Adults (47 - 54)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seniors (71+)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Young Adults (16 - 25)&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Adults (55 - 70)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Children (7 - 15)&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;-9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Unspecified&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Road User:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bicyclist (includes pillion passengers)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Passenger&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Motorcycle rider&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Motorcycle pillion passenger&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pedestrian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Driver&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;-9&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Crash ID' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Dayweek' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Time' />
        <field-sort-custom-order field='Crash Type' />
        <field-sort-custom-order field='Number of Fatalities' />
        <field-sort-custom-order field='Bus  Involvement' />
        <field-sort-custom-order field='Rigid Truck  Involvement' />
        <field-sort-custom-order field='Articulated Truck  Involvement' />
        <field-sort-custom-order field='Speed Limit' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='Crash ID (Fatalities)' />
        <field-sort-custom-order field='Road User' />
        <field-sort-custom-order field='Gender' />
        <field-sort-custom-order field='Age' />
        <field-sort-custom-order field='Calculation_2080663073153290248' />
      </field-sort-info>
      <filter class='categorical' column='[Age (group)]' filter-group='2'>
        <groupfilter from='&quot;Adults (26 - 36)&quot;' function='range' level='[Age (group)]' to='&quot;Young Adults (16 - 25)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[Gender]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Gender]' member='&quot;Female&quot;' />
          <groupfilter function='member' level='[Gender]' member='&quot;Male&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[Road User]' filter-group='2'>
        <groupfilter from='&quot;Bicyclist (includes pillion passengers)&quot;' function='range' level='[Road User]' to='&quot;Pedestrian&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[yr:Date:ok]' filter-group='2'>
        <groupfilter from='1990' function='range' level='[yr:Date:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Road' type='sheet' worksheet='% Fatalities by Gender' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Road' />
      </command>
    </action>
    <action caption='Filter 2 (generated) 1' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Road' type='sheet' worksheet='Fatalities per 100,000 people by State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Road' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Road' type='sheet' worksheet='% Fatalities by Road User &amp; Gender' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Road' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Road' type='sheet' worksheet='Fatalities by Road User &amp; Gender' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Road' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='% Fatalities by Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 46)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (47 - 54)&quot;'>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Bicyclist (includes pillion passengers)&quot;' value='Bicyclist' />
                <alias key='&quot;Motorcycle pillion passenger&quot;' value='Motorbike Passenger' />
                <alias key='&quot;Motorcycle rider&quot;' value='Motorbike Rider' />
              </aliases>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[pcto:sum:Number of Fatalities:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[sum:Number of Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Age Groups,Road User)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Age (group)]' />
              <groupfilter function='level-members' level='[Road User]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Road User)]'>
            <groupfilter function='level-members' level='[Road User]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' filter-group='7'>
            <groupfilter function='level-members' level='[Age (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' direction='DESC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' />
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Road User:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' direction='ASC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' />
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Date:ok]' />
          </filter>
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (State)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Road User)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Age Groups,Road User)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:sum:Number of Fatalities:qk]' value='51' />
            <format attr='title' class='0' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:sum:Number of Fatalities:qk]' scope='cols' value='% of Fatalities' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' value='22' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:sum:Number of Fatalities:qk]</cols>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='% Fatalities by Road User &amp; Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 46)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (47 - 54)&quot;'>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Bicyclist (includes pillion passengers)&quot;' value='Bicyclist' />
                <alias key='&quot;Motorcycle pillion passenger&quot;' value='Motorbike Passenger' />
                <alias key='&quot;Motorcycle rider&quot;' value='Motorbike Rider' />
              </aliases>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[pcto:sum:Number of Fatalities:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[sum:Number of Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Gender,Road User)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Gender]' />
              <groupfilter function='level-members' level='[Road User]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Road User)]'>
            <groupfilter function='level-members' level='[Road User]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' filter-group='7'>
            <groupfilter function='level-members' level='[Age (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' direction='DESC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' />
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Road User:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' direction='ASC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' />
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Date:ok]' />
          </filter>
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (State)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Road User)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Gender,Road User)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:sum:Number of Fatalities:qk]' value='51' />
            <format attr='title' class='0' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:sum:Number of Fatalities:qk]' scope='cols' value='% of Fatalities' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' value='22' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:sum:Number of Fatalities:qk]</cols>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Fatalities by Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[sum:Number of Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' value='41' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Fatalities by Gender for Driver'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Bicyclist (includes pillion passengers)&quot;' value='Bicyclist' />
                <alias key='&quot;Motorcycle pillion passenger&quot;' value='Motorbike Passenger' />
                <alias key='&quot;Motorcycle rider&quot;' value='Motorbike Rider' />
              </aliases>
            </column>
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[sum:Number of Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]'>
            <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Driver&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' />
              <lod column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[tyr:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Fatalities by Gender for Passenger'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Bicyclist (includes pillion passengers)&quot;' value='Bicyclist' />
                <alias key='&quot;Motorcycle pillion passenger&quot;' value='Motorbike Passenger' />
                <alias key='&quot;Motorcycle rider&quot;' value='Motorbike Rider' />
              </aliases>
            </column>
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[sum:Number of Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]'>
            <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Passenger&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' />
              <lod column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[tyr:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Fatalities by Road User &amp; Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 46)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (47 - 54)&quot;'>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Bicyclist (includes pillion passengers)&quot;' value='Bicyclist' />
                <alias key='&quot;Motorcycle pillion passenger&quot;' value='Motorbike Passenger' />
                <alias key='&quot;Motorcycle rider&quot;' value='Motorbike Rider' />
              </aliases>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[sum:Number of Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Age Groups,Road User)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Age (group)]' />
              <groupfilter function='level-members' level='[Road User]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Gender,Road User)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Gender]' />
              <groupfilter function='level-members' level='[Road User]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' filter-group='7'>
            <groupfilter function='level-members' level='[Age (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]' direction='DESC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' />
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Road User:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' direction='DESC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' />
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[yr:Date:ok]' />
          </filter>
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (State)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Gender,Road User)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Age Groups,Road User)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' scope='cols' value='Number of Fatalities' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]' value='164' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Fatalities per 100,000 people by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 46)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (47 - 54)&quot;'>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Fatalities per 100,000' datatype='real' name='[Calculation_1219349647389655054]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Number of Fatalities])/MEDIAN([Population]) *100000' />
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Bicyclist (includes pillion passengers)&quot;' value='Bicyclist' />
                <alias key='&quot;Motorcycle pillion passenger&quot;' value='Motorbike Passenger' />
                <alias key='&quot;Motorcycle rider&quot;' value='Motorbike Rider' />
              </aliases>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[usr:Calculation_1219349647389655054:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' filter-group='7'>
            <groupfilter function='level-members' level='[Age (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Gender:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Road User:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' value='true' />
            <format attr='break-on-special' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' value='true' />
            <format attr='show-null-value-warning' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' value='true' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' />
              <lod column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State:nk]' />
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' />
              <geometry column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Latitude (generated)]</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='For every 1 driver, how many passengers?'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 46)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (47 - 54)&quot;'>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Fatalities per 100,000' datatype='real' name='[Calculation_1219349647389655054]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Number of Fatalities])/MEDIAN([Population]) *100000' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Bicyclist (includes pillion passengers)&quot;' value='Bicyclist' />
                <alias key='&quot;Motorcycle pillion passenger&quot;' value='Motorbike Passenger' />
                <alias key='&quot;Motorcycle rider&quot;' value='Motorbike Rider' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[diff:usr:Calculation_1219349647389655054:qk:17]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User]' ordering-type='Field' type='Difference'>
                <address>
                  <value>2</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[usr:Calculation_1219349647389655054:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Adults (26 - 36)&quot;' function='range' level='[Age (group)]' to='&quot;Adults (55 - 70)&quot;' />
              <groupfilter function='member' level='[Age (group)]' member='&quot;Seniors (71+)&quot;' />
              <groupfilter function='member' level='[Age (group)]' member='&quot;Teens / Young Adults (16 - 25)&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' direction='DESC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' />
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[Road User]' />
                <groupfilter function='level-members' level='[Gender]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Road User]' member='&quot;Passenger&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[Gender]' member='&quot;Female&quot;' />
                  <groupfilter function='member' level='[Gender]' member='&quot;Male&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Driver&quot;' />
              <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Passenger&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)] / [federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)])</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:17]</cols>
      </table>
    </worksheet>
    <worksheet name='Total Fatalities by Gender &amp; Age Group by Driver'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 46)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (47 - 54)&quot;'>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Fatalities per 100,000' datatype='real' name='[Calculation_1219349647389655054]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Number of Fatalities])/MEDIAN([Population]) *100000' />
            </column>
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Bicyclist (includes pillion passengers)&quot;' value='Bicyclist' />
                <alias key='&quot;Motorcycle pillion passenger&quot;' value='Motorbike Passenger' />
                <alias key='&quot;Motorcycle rider&quot;' value='Motorbike Rider' />
              </aliases>
            </column>
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[sum:Number of Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[usr:Calculation_1219349647389655054:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Adults (26 - 36)&quot;' function='range' level='[Age (group)]' to='&quot;Adults (55 - 70)&quot;' />
              <groupfilter function='member' level='[Age (group)]' member='&quot;Seniors (71+)&quot;' />
              <groupfilter function='member' level='[Age (group)]' member='&quot;Young Adults (16 - 25)&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' direction='DESC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' />
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]'>
            <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Driver&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]</rows>
        <cols>([federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)] / [federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Total Fatalities by Gender &amp; Age Group by Driver (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 46)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (47 - 54)&quot;'>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Fatalities per 100,000' datatype='real' name='[Calculation_1219349647389655054]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Number of Fatalities])/MEDIAN([Population]) *100000' />
            </column>
            <column caption='Gender Fatalities per 100,000' datatype='real' name='[Calculation_2160039020159533057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Number of Fatalities])/MEDIAN([Gender Population]) *100000' />
            </column>
            <column datatype='integer' name='[Gender Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Bicyclist (includes pillion passengers)&quot;' value='Bicyclist' />
                <alias key='&quot;Motorcycle pillion passenger&quot;' value='Motorbike Passenger' />
                <alias key='&quot;Motorcycle rider&quot;' value='Motorbike Rider' />
              </aliases>
            </column>
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[usr:Calculation_1219349647389655054:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160039020159533057]' derivation='User' name='[usr:Calculation_2160039020159533057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Adults (26 - 36)&quot;' function='range' level='[Age (group)]' to='&quot;Adults (55 - 70)&quot;' />
              <groupfilter function='member' level='[Age (group)]' member='&quot;Seniors (71+)&quot;' />
              <groupfilter function='member' level='[Age (group)]' member='&quot;Young Adults (16 - 25)&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' direction='DESC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' />
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]'>
            <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Driver&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_2160039020159533057:qk]</rows>
        <cols>([federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)] / [federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Total Fatalities by Gender &amp; Age Group by Passenger'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 46)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (47 - 54)&quot;'>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Fatalities per 100,000' datatype='real' name='[Calculation_1219349647389655054]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Number of Fatalities])/MEDIAN([Population]) *100000' />
            </column>
            <column caption='Gender Fatalities per 100,000' datatype='real' name='[Calculation_2160039020159533057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Number of Fatalities])/MEDIAN([Gender Population]) *100000' />
            </column>
            <column datatype='integer' name='[Gender Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Bicyclist (includes pillion passengers)&quot;' value='Bicyclist' />
                <alias key='&quot;Motorcycle pillion passenger&quot;' value='Motorbike Passenger' />
                <alias key='&quot;Motorcycle rider&quot;' value='Motorbike Rider' />
              </aliases>
            </column>
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[usr:Calculation_1219349647389655054:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2160039020159533057]' derivation='User' name='[usr:Calculation_2160039020159533057:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]'>
            <groupfilter function='level-members' level='[Age (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' direction='DESC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' />
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]'>
            <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Passenger&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_2160039020159533057:qk]</rows>
        <cols>([federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)] / [federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Careless driving for males' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Chance of getting killed higher as a Male and more so as a Young Male Driver.</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='184' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='1' param='vert' removable='false' type='layout-flow' w='98828' x='586' y='1042'>
            <zone h='4297' id='3' type='title' w='98828' x='586' y='1042' />
            <zone fixed-size='134' h='17448' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98828' x='586' y='5339' />
            <zone h='76171' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98828' x='586' y='22787'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='When we look at Total fatalities of all Road Users, Males dominate' captured-sheet='Fatalities by Gender' id='1'>
                    <capturedDeltas>
                      <worksheet name='Fatalities by Gender'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' scope='rows' value='Number of Total Fatalities' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Looking at Drivers, again Males dominate' captured-sheet='Fatalities by Gender for Driver' id='2'>
                    <capturedDeltas>
                      <worksheet name='Fatalities by Gender for Driver'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' scope='rows' value='Number of Driver Fatalities' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <axis>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='The gap between Male and Females decreases as the age increases' captured-sheet='Total Fatalities by Gender &amp; Age Group by Driver' id='3' />
                  <story-point caption='Even comparing with Gender populations, Male Drivers are still substantially higher' captured-sheet='Total Fatalities by Gender &amp; Age Group by Driver (2)' id='7' />
                  <story-point caption='The chances of being killed as a Passenger are almost the same for Male and Female' captured-sheet='Fatalities by Gender for Passenger' id='10' />
                  <story-point caption='For age groups, there is a much closer spread, Females even being higher for some groups' captured-sheet='Total Fatalities by Gender &amp; Age Group by Passenger' id='8' />
                  <story-point caption='Statistically, the amount of deaths for Male Drivers is substantially different to Female Drivers and all Passenger deaths.' captured-sheet='Road' id='4'>
                    <capturedDeltas>
                      <worksheet name='% Fatalities by Gender'>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Road User)]'>
                          <groupfilter function='union' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Road User]' member='&quot;Driver&quot;' />
                            <groupfilter function='member' level='[Road User]' member='&quot;Passenger&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter from='&quot;Adults (26 - 36)&quot;' function='range' level='[Age (group)]' to='&quot;Adults (55 - 70)&quot;' />
                            <groupfilter function='member' level='[Age (group)]' member='&quot;Seniors (71+)&quot;' />
                            <groupfilter function='member' level='[Age (group)]' member='&quot;Young Adults (16 - 25)&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Driver&quot;' />
                            <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Passenger&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='% Fatalities by Road User &amp; Gender'>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Road User)]'>
                          <groupfilter function='union' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Road User]' member='&quot;Driver&quot;' />
                            <groupfilter function='member' level='[Road User]' member='&quot;Passenger&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter from='&quot;Adults (26 - 36)&quot;' function='range' level='[Age (group)]' to='&quot;Adults (55 - 70)&quot;' />
                            <groupfilter function='member' level='[Age (group)]' member='&quot;Seniors (71+)&quot;' />
                            <groupfilter function='member' level='[Age (group)]' member='&quot;Young Adults (16 - 25)&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Driver&quot;' />
                            <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Passenger&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Fatalities by Road User &amp; Gender'>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter from='&quot;Adults (26 - 36)&quot;' function='range' level='[Age (group)]' to='&quot;Adults (55 - 70)&quot;' />
                            <groupfilter function='member' level='[Age (group)]' member='&quot;Seniors (71+)&quot;' />
                            <groupfilter function='member' level='[Age (group)]' member='&quot;Young Adults (16 - 25)&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Inclusions (Gender,Road User)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[Gender]' />
                            <groupfilter function='level-members' level='[none:Road User:nk]' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]'>
                          <groupfilter function='reorder-dimensionality' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='crossjoin'>
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[Gender]' member='&quot;Female&quot;' />
                                <groupfilter function='member' level='[Gender]' member='&quot;Male&quot;' />
                              </groupfilter>
                              <groupfilter function='union'>
                                <groupfilter function='member' level='[Road User]' member='&quot;Driver&quot;' />
                                <groupfilter function='member' level='[Road User]' member='&quot;Passenger&quot;' />
                              </groupfilter>
                            </groupfilter>
                            <order>
                              <hierarchy name='[Road User]' />
                              <hierarchy name='[Gender]' />
                            </order>
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Driver&quot;' />
                            <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Passenger&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Fatalities per 100,000 people by State'>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Age Groups,Road User)]'>
                          <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
                            <groupfilter function='level-members' level='[Age (group)]' />
                            <groupfilter function='level-members' level='[Road User]' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Road User)]'>
                          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Road User]' member='&quot;Driver&quot;' />
                            <groupfilter function='member' level='[Road User]' member='&quot;Passenger&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter from='&quot;Adults (26 - 36)&quot;' function='range' level='[Age (group)]' to='&quot;Adults (55 - 70)&quot;' />
                            <groupfilter function='member' level='[Age (group)]' member='&quot;Seniors (71+)&quot;' />
                            <groupfilter function='member' level='[Age (group)]' member='&quot;Young Adults (16 - 25)&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Driver&quot;' />
                            <groupfilter function='member' level='[none:Road User:nk]' member='&quot;Passenger&quot;' />
                          </groupfilter>
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='23177' hidden='true' id='6' story-point-id='3' type='text' w='27818' x='60542' y='45964'>
          <formatted-text>
            <run>It is clear that Female Drivers are dying substantially less, but is this just because there are less of them? We need to compare to the gender populations.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='10547' hidden='true' id='7' story-point-id='1' type='text' w='33309' x='50000' y='30599'>
          <formatted-text>
            <run>There is a similar gap between Male and Female fatalities over the years, no time has Female fatalities been close to overtaking Male</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='14844' id='8' story-point-id='4' type='text' w='33309' x='5710' y='49609'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>As a Passenger the chances of getting killed are basically the same for Males and Females. Driver&apos;s are going to have a higher chance of a fatal crash if they are Male.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='19531' hidden='true' id='9' story-point-id='7' type='text' w='33309' x='60469' y='42708'>
          <formatted-text>
            <run>Doesn&apos;t matter even on a per capita basis, the Male drivers dominate fatalities. Does this trend follow in other categories? Lets look at Passenger fatalities.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='14063' hidden='true' id='11' story-point-id='8' type='text' w='33309' x='53075' y='52865'>
          <formatted-text>
            <run>Clearly Male fatalities dominate in the under 25&apos;s category. This explains why insurance costs between under 25 Males and Females are significantly different.</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Road'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
      </datasources>
      <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
        <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[Age]' new-bin='true'>
            <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
              <value>26</value>
              <value>27</value>
              <value>28</value>
              <value>29</value>
              <value>30</value>
              <value>31</value>
              <value>32</value>
              <value>33</value>
              <value>34</value>
              <value>35</value>
              <value>36</value>
            </bin>
            <bin default-name='false' value='&quot;Adults (37 - 46)&quot;'>
              <value>37</value>
              <value>38</value>
              <value>39</value>
              <value>40</value>
              <value>41</value>
              <value>42</value>
              <value>43</value>
              <value>44</value>
              <value>45</value>
              <value>46</value>
            </bin>
            <bin default-name='false' value='&quot;Adults (47 - 54)&quot;'>
              <value>47</value>
              <value>48</value>
              <value>49</value>
              <value>50</value>
              <value>51</value>
              <value>52</value>
              <value>53</value>
              <value>54</value>
            </bin>
            <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
              <value>55</value>
              <value>56</value>
              <value>57</value>
              <value>58</value>
              <value>59</value>
              <value>60</value>
              <value>61</value>
              <value>62</value>
              <value>63</value>
              <value>64</value>
              <value>65</value>
              <value>66</value>
              <value>67</value>
              <value>68</value>
              <value>69</value>
              <value>70</value>
            </bin>
            <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
              <value>7</value>
              <value>8</value>
              <value>9</value>
              <value>10</value>
              <value>11</value>
              <value>12</value>
              <value>13</value>
              <value>14</value>
              <value>15</value>
            </bin>
            <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
              <value>0</value>
              <value>1</value>
              <value>2</value>
              <value>3</value>
              <value>4</value>
              <value>5</value>
              <value>6</value>
            </bin>
            <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
              <value>71</value>
              <value>72</value>
              <value>73</value>
              <value>74</value>
              <value>75</value>
              <value>76</value>
              <value>77</value>
              <value>78</value>
              <value>79</value>
              <value>80</value>
              <value>81</value>
              <value>82</value>
              <value>83</value>
              <value>84</value>
              <value>85</value>
              <value>86</value>
              <value>87</value>
              <value>88</value>
              <value>89</value>
              <value>90</value>
              <value>91</value>
              <value>92</value>
              <value>93</value>
              <value>94</value>
              <value>95</value>
              <value>96</value>
              <value>97</value>
              <value>98</value>
              <value>99</value>
              <value>100</value>
              <value>101</value>
            </bin>
            <bin default-name='false' value='&quot;Young Adults (16 - 25)&quot;'>
              <value>16</value>
              <value>17</value>
              <value>18</value>
              <value>19</value>
              <value>20</value>
              <value>21</value>
              <value>22</value>
              <value>23</value>
              <value>24</value>
              <value>25</value>
            </bin>
          </calculation>
        </column>
        <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
        <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
        <column datatype='string' name='[Road User]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Bicyclist (includes pillion passengers)&quot;' value='Bicyclist' />
            <alias key='&quot;Motorcycle pillion passenger&quot;' value='Motorbike Passenger' />
            <alias key='&quot;Motorcycle rider&quot;' value='Motorbike Rider' />
          </aliases>
        </column>
        <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='5' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
            <zone fixed-size='1121' h='97916' id='3' is-fixed='true' type='layout-basic' w='82064' x='586' y='1042'>
              <zone h='77933' id='1' name='Fatalities per 100,000 people by State' w='41037' x='41613' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='15' />
                </zone-style>
              </zone>
              <zone h='19983' id='12' name='% Fatalities by Gender' show-title='false' w='82064' x='586' y='78975'>
                <layout-cache minwidth='180' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='15' />
                </zone-style>
              </zone>
              <zone h='41406' id='14' name='Fatalities by Road User &amp; Gender' w='41027' x='586' y='1042'>
                <layout-cache minwidth='264' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='15' />
                </zone-style>
              </zone>
              <zone h='36527' id='15' name='% Fatalities by Road User &amp; Gender' show-title='false' w='41027' x='586' y='42448'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='15' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='166' h='97916' id='4' is-fixed='true' param='vert' type='layout-flow' w='12152' x='82650' y='1042'>
              <zone h='21615' id='13' name='% Fatalities by Gender' pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='color' w='12152' x='82650' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6771' id='8' mode='checkdropdown' name='Fatalities per 100,000 people by State' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' type='filter' values='relevant' w='12152' x='82650' y='22657'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9766' id='16' mode='slider' name='Fatalities per 100,000 people by State' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' type='filter' values='relevant' w='12152' x='82650' y='29428'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11589' id='9' mode='radiolist' name='Fatalities per 100,000 people by State' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='filter' values='relevant' w='12152' x='82650' y='39194'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23959' id='11' mode='typeinlist' name='Fatalities per 100,000 people by State' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='filter' values='relevant' w='12152' x='82650' y='50783'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6901' id='17' name='Fatalities per 100,000 people by State' pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' show-title='false' type='color' w='33821' x='45022' y='69531' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Road'>
      <viewpoints>
        <viewpoint name='% Fatalities by Gender'>
          <highlight field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='% Fatalities by Road User &amp; Gender' />
        <viewpoint name='Fatalities by Road User &amp; Gender' />
        <viewpoint name='Fatalities per 100,000 people by State'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' maximized='true' name='Careless driving for males'>
      <viewpoints />
      <active id='2' />
    </window>
    <window class='worksheet' name='For every 1 driver, how many passengers?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:usr:Calculation_1219349647389655054:qk:11]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='% Fatalities by Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='filter' values='relevant' />
            <card param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Crash Type:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='% Fatalities by Road User &amp; Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Teens / Young Adults (16 - 25)&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Crash Type:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Fatalities by Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Crash Type:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Date:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Dayweek:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State1:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Year:qk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Fatalities by Gender for Driver'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Fatalities by Gender for Passenger'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Fatalities by Road User &amp; Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Crash Type:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Fatalities per 100,000 people by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Total Fatalities by Gender &amp; Age Group by Driver'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Total Fatalities by Gender &amp; Age Group by Driver (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Total Fatalities by Gender &amp; Age Group by Passenger'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Careless driving for males' width='384'>
      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
      pRa0KsG2D9+hqnbY0wbY8OTz+CKweOkyjlyxmLa2tjFlB3p7STOayDPn4nH2sOGFT37M/cjV
      q9nwyAM02vpIxMI8ff9daGd8hUIdpGm19Nk78IdjOPs6eXnj63uvEJi/6DDef+1FqurbSCZi
      bP7vWwT3Umbe8jU0fPQOr79bxTGrl45LH22jJ3UAeeXzuOf2G3jj2b9yxIrlnHjaWby3de9n
      m7//o/O479qL+Mqqo3johTcoLS3aaxmAH/zst1jTBjn9xKM5+oTT+O9HdaDSc8PaG3nr2fWs
      WrGc4045g/98sIM07dhHNudedAVZURsnH7OaU77xA4oWncAPTtsHB3DMGZy0uITvnXEyJ572
      bdodu978z1p2PD85fQW//dk5LF16OOdfcgXuoe2vKsPCed84gnPOPJnVR59Iy0BqSM4970Lu
      u+5ilq1YyT/e3bZP/R7m5O/8hJmmMKeecBRnfv98XKE9e32tIZu1/3cLT919A1WNnXvMOxYF
      l19zMx0f/5OvHvkVVh99Ak//8x3S09PQ5ZZz9aXnsfaKn/OVVWt48l+bSZ/g8dgn4de/v44d
      /32GlSuWc/mNd6NOn/iR4u786KLLMQY7OO2Er7Ji1Wpuv/9ptGl7e70Ny486GaWjhlUrlnPh
      b64iI3eXkdAQ45arLmX5ssP5xg9+yvHnXEyJcfQ9nIKfnHcul5/3bVYfcyL/2ryDksLxL2vH
      ouCrqxbzyvt2ls4ZP9dPPvM71Lz2KMuXreCq/1tHYYllgjpAm1nM2msv5ZE7rmX54Ydz2rfO
      ZktrD2PucbVmfvydo/nBGSdx7ClnsqXVTV72PuhToeHK66/jP4/fwYrlK7j29gfR6nR7L7cH
      zjz3ImZnRfn6ycdw7CnfQFm0iJ/94LRJ85/6/Z+yoEDB9844mWXLV/LHW+4B9djx1KVpePQv
      t3DkyuUce8o3yJt/PF+ZV0Jm4Qxu/N3P+NNVv2LZsuXc/fQb3HzrzeNOvJ3zk/O47fLzWLn6
      GJ7612ZKS4bHXk1v21bOOes0li5bzt3PvMNF5589puwhy4+iROngqFUr+OGFv0GbsbdxH8+M
      w47hZ2et5lfnfZflK9fwRt0AN199KQAVC5Yzw+DnqCO+wgWXXElCvW/6z7LM44oLv8nvf3Eu
      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
      3sKf1z1GNBZj/Z/X0tjtHmrraZ594Hbue3QDTk9wpJ6yecu59KLzyDbqxtT/UU0bRyxP7QbU
      6SZyVBG8icmvT1R2v+wA/vX8E9S9m9qiLVtzAgtnWvneOd9h584GNEUV9HzwMii/yaKFh/CP
      bS6WLFkyUvY7P/g+DTt3kqax0LfppUnbUGoNLDxkFttcvWPKD7Pp1ec54uvncuT8Ulh5ONdf
      fxOnrlmMw+Xl1CWLKZjkDvKo409j1ZJyWLGMG667lgTH8/UTVvGP/3zA909ewWv/foMTTzt/
      bKFkhC1VVWiSSeq3fsCMJUehBv7x/NOc8eNLWGg1wYpl3HbDdQROPQbrrIVk5xfT1GZj8cJ5
      vL25ihWHFPPqpjr+8MffowDylF6qPsHriIn69cpb1fz+D39AAeRrw7zyxod8/+TF1L7/Fudf
      9Se+smDamDo0+mwyol1cesWVfPW4r3HYjDxa22xUVliHckRRa1PjSniQ9Y88g8/dz1dO+j7L
      pumo71Xw+9+cBIC3q5Ft7W6KgMNXH8+ZJ68E4L33PgJg43NPceq5F7OoPCd1/YOtADz77Itc
      cPFlmHUqlhxi5dZ1LzHvVz9hoKOWioXnc9P35WOiqc4X2r6c+HWOXFIOK5dzy/U3EOE0ntnw
      Chf9+vdkaBQcOjOfOx57hd/+/Pv0NFcz5/Bfcf2PD9snvfiSCkyqXb+NaUqCscmvZ6rGlz0g
      j4C8fW3cdu/jHH3sMRjSNSgmKRd0dbL2jgc56thjyNClfSYZ+h0DNNteYefmVGthZcpb/uz/
      XciLGx7H5fUzc9ERnPLVZZPWYVAoCQLzV53AhmtvRZx0GK3OBGcVGCfM/9qLT7LghB9y8qoF
      ADgGIhxZsuvxTp5RhTsE297ZwMe2IMsXzUWlUpFMxiA+iDbdPKluANQqFfFEAkiNnEgmUSqV
      k/TrcPq7mvjr+vUAJKMBsitSE2nu8q+OM/4Aj6+/g0NP/jHzOt7HFY3z7w2Pop+1hl33+1pi
      kaG77/Qszj//fKpe/zu93gART4CW1kbWD7Xnc3swB/xM1qHOrgBHluWMu+4edPLcow+M/DZk
      pMYt1zqXM4+Xxl/y5bEvmVotYQEedz9P/u2vQ1eTGA2p92mF0xbxtTX7ZvwBMhUCT4IRY++P
      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
      Tf1/johBPEkvmMUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='For every 1 driver, how many passengers?' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Road' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eZhcV3Xo+zs1T93Vc6vnlnrWPNiSJRtswCQQCAEyECDhvpCELy/v5uXx
      3Zd7SXIvNmMCFy4BQngQsHONwWDM4AEMxpNsSS3ZaslSq4fquVU9TzVPp6rOeX+UqlQ9qlvq
      VnV179/3SV11ap991jndtdbea6+1tqSqqopAIBAIth2aTAsgEAgEgswgDIBAIBBsU4QBEAgE
      gm2KMAACgUCwTREGQCAQCLYpwgAIBALBNkUYAIFAINimCAMgEAgE2xRhAAQCgWCbIgyAQCAQ
      bFOEARAIBIJtijAAAoFAsE0RBkAgEAi2KcIACAQCwTZFGACBQCDYpggDIBAIBNsUYQAEAoFg
      m6J98MEHH1zLCQOdbfz4Z8/Q1tZGW1sbMV0OlTsKl24cCzM0NkNerm3lTt1DfPGRF7j7yG4m
      HBd4urWHfU21xMI+xmb85NosqaZf+cqXOX78xFpETtH2wk/oclnYVZ63pvNOv/A0v3r+JG1t
      Fxif8VKzswadRropGZIMtb3AC10udu8qTx27dO4kpqJaTLrE+7B7jDbH+PLP9ybovHCGnz/z
      K1whlZ3V5Sx1F97ZCZ55+klOnz2PLxynsqIMjXRr9/vFL36Zu+++ud+bYPuQzfplvbny+qu4
      4xYK7dbUsdGBbn7y058x4YlQV1tF8mu53PF0lmqz5hnAYFcbe+55Dx/72Mf42Mc+xrEDjcs3
      9k/wyE9/s6b+dzQd5oO/e++103v46W/Ozvv84x//L2sV+ZY5feYiH/nYx/jLv/xzGnaY+Ocv
      /9uGXOfyuZO4w9ffh93jnLvcu279OztO81TrAH/20T9HHbvAL890Lmoz2nuBf/n2Y9xz/7v5
      8z/7U/K0QYZG59ZNBoFgJbajflmIb3aUT//3T/DQ9x6j1zmdOj4zfIXv/Og5PvCnf0axNMU3
      H31qxePpLNdGtz4iy/zguw/ji0FUlrnvd97P3ho7Dz3yOI5Lw3z72yHq9hzhbXcf5PH//RBz
      YYVYVOae+9/DweaaeT35Jxy85AjwziNVPPL401wa9vPt0Ch7jtzD3Ud289hjP+KDH/wAAKd/
      8xSX+kZRJR0f+NCfUpRrwnGpledeuYBep6G65TC/c9+xef1fOvcyw2/E8HgDvO+DH6G21MY3
      vvkwf/3XH0MClIibR554kf/jw+9fdJeSpKHpwHH0P3+OKKBH5YWnf4xjdA4lrvK+D3yYiqJc
      Zkb6ePyp59BqtSiSnj/5Tx8hx6gj7J/j+9//IXFJh2/qKrXH37fqJ7zUfUUCLh599DGiqkRJ
      dQvv/537AJkf/ehpjh+q5xvfeoiP/t3naNpxbYSkKBQWl6LTamhoqOP0uGfRdf73oz/h4//4
      GXIMibHBwWNvTn02M9rHj372KzSSxP4Tb+PuQ83MDbfz7OsDxHyzBPw+dh64h3e++ci138+T
      XOwZw2wyMjEXBEBVovzssUeZ8ssYzHn8yYf/CINW4keP/Yh3vO04X/3aN7j3/R/l3sNNq342
      gq1OdugXx4WTtHZOosg+PB4/7/mjD1NXUYQaj/D49x/FFYpispXwJx96PzoJHnvsR/zWvXfy
      tX/9Ju/44H/m+L6ErLKs8Jcf/wfG3vgNE2myP/vUM3zoL/8Wi0HHHfe9l18+8AAx3rPscd0q
      zkVdI88/8S31VMf4/INKVPX5QomXsbD6mc99IXHcNah+6quPpDWMqz5fINEuLquf+eznU+2+
      8K0nrr08r37riedTr7/6yDPzLvWFL3xJVVVVvdpxWv3mo4nPfDNX1c//r/9PVVVV/cynP6PG
      lURbn88379zzzz+h/vg3baqqqmrYN63+44P/pKqqqj72b19Q2/qnE21+87j61KmO+df89KfU
      0LXXAfeE+t8/9c+qqqpqx+ln1Id++rKqqqoaCbjUBz79BVVRVTXg96lxJSHEeOdp9ds/TtzP
      V/7pQXV4yqOqqqoOnn9efeL58/Ou88hXP6UOuq6/T7//pe7rm1/+vHp1OvH66Ue+obZ2jaqq
      GlI/8bd/rT7wmf+pTs7Nv39VVdTvfO2L6oX2K+rnP/8F1RuOLfg8oj7wwGcTL6Mh9fz58+r5
      8+fVGbdfVRVZ/cwDD6pBOa6qqqJ+5XMPqNOBmDrecUr91Ff/Q43GFVVVFfXzn02c73j9OfWb
      P3j2+jO89nt7/sffVV9o61NVVVX72p5XH/rJi6qqqurnPvkJ9cFPPqD2OidVwfYl2/XLD3/1
      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
    </thumbnail>
  </thumbnails>
</workbook>
