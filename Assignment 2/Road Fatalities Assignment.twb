<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0627.2230                               -->
<workbook original-version='18.1' source-build='2018.2.0 (20182.18.0627.2230)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' inline='true' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Cleaned_Road_Fatal_Aus2.0' name='excel-direct.153pr2f1mkq34o141ktfl0xqc10e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Xeton/Desktop/Macquarie Uni/Repos/MGMT220/Assignment 2/Cleaned_Road_Fatal_Aus2.0.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Fatal_Crashes].[Crash ID]' />
              <expression op='[Fatalities].[Crash ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.153pr2f1mkq34o141ktfl0xqc10e' name='Fatal_Crashes' table='[Fatal_Crashes$]' type='table'>
            <columns gridOrigin='A1:L10001:no:A1:L10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Crash ID' ordinal='0' />
              <column datatype='string' name='State' ordinal='1' />
              <column datatype='string' name='Dayweek' ordinal='2' />
              <column datatype='date' date-parse-format='MMMM/yyyy' name='Date' ordinal='3' />
              <column datatype='datetime' name='Time' ordinal='4' />
              <column datatype='string' name='Crash Type' ordinal='5' />
              <column datatype='integer' name='Number of Fatalities' ordinal='6' />
              <column datatype='string' name='Bus  Involvement' ordinal='7' />
              <column datatype='string' name='Rigid Truck  Involvement' ordinal='8' />
              <column datatype='string' name='Articulated Truck  Involvement' ordinal='9' />
              <column datatype='integer' name='Speed Limit' ordinal='10' />
              <column datatype='integer' name='Population' ordinal='11' />
            </columns>
          </relation>
          <relation connection='excel-direct.153pr2f1mkq34o141ktfl0xqc10e' name='Fatalities' table='[Fatalities$]' type='table'>
            <columns gridOrigin='A1:D10001:no:A1:D10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Crash ID' ordinal='0' />
              <column datatype='string' name='Road User' ordinal='1' />
              <column datatype='string' name='Gender' ordinal='2' />
              <column datatype='integer' name='Age' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Age]' value='[Fatalities].[Age]' />
          <map key='[Articulated Truck  Involvement]' value='[Fatal_Crashes].[Articulated Truck  Involvement]' />
          <map key='[Bus  Involvement]' value='[Fatal_Crashes].[Bus  Involvement]' />
          <map key='[Crash ID (Fatalities)]' value='[Fatalities].[Crash ID]' />
          <map key='[Crash ID]' value='[Fatal_Crashes].[Crash ID]' />
          <map key='[Crash Type]' value='[Fatal_Crashes].[Crash Type]' />
          <map key='[Date]' value='[Fatal_Crashes].[Date]' />
          <map key='[Dayweek]' value='[Fatal_Crashes].[Dayweek]' />
          <map key='[Gender]' value='[Fatalities].[Gender]' />
          <map key='[Number of Fatalities]' value='[Fatal_Crashes].[Number of Fatalities]' />
          <map key='[Population]' value='[Fatal_Crashes].[Population]' />
          <map key='[Rigid Truck  Involvement]' value='[Fatal_Crashes].[Rigid Truck  Involvement]' />
          <map key='[Road User]' value='[Fatalities].[Road User]' />
          <map key='[Speed Limit]' value='[Fatal_Crashes].[Speed Limit]' />
          <map key='[State]' value='[Fatal_Crashes].[State]' />
          <map key='[Time]' value='[Fatal_Crashes].[Time]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L10001:no:A1:L10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crash ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Crash ID]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Crash ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dayweek</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Dayweek]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Dayweek</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crash Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Crash Type]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Crash Type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Fatalities</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Fatalities]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Number of Fatalities</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bus  Involvement</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Bus  Involvement]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Bus  Involvement</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rigid Truck  Involvement</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Rigid Truck  Involvement]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Rigid Truck  Involvement</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Articulated Truck  Involvement</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Articulated Truck  Involvement]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Articulated Truck  Involvement</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speed Limit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Speed Limit]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Speed Limit</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Fatal_Crashes]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crash ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Crash ID (Fatalities)]</local-name>
            <parent-name>[Fatalities]</parent-name>
            <remote-alias>Crash ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Road User</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Road User]</local-name>
            <parent-name>[Fatalities]</parent-name>
            <remote-alias>Road User</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Fatalities]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RAU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[Fatalities]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Fatalities]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D10001:no:A1:D10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Age]' new-bin='true'>
          <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
            <value>26</value>
            <value>27</value>
            <value>28</value>
            <value>29</value>
            <value>30</value>
            <value>31</value>
            <value>32</value>
            <value>33</value>
            <value>34</value>
            <value>35</value>
            <value>36</value>
          </bin>
          <bin default-name='false' value='&quot;Adults (37 - 54)&quot;'>
            <value>37</value>
            <value>38</value>
            <value>39</value>
            <value>40</value>
            <value>41</value>
            <value>42</value>
            <value>43</value>
            <value>44</value>
            <value>45</value>
            <value>46</value>
            <value>47</value>
            <value>48</value>
            <value>49</value>
            <value>50</value>
            <value>51</value>
            <value>52</value>
            <value>53</value>
            <value>54</value>
          </bin>
          <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
            <value>55</value>
            <value>56</value>
            <value>57</value>
            <value>58</value>
            <value>59</value>
            <value>60</value>
            <value>61</value>
            <value>62</value>
            <value>63</value>
            <value>64</value>
            <value>65</value>
            <value>66</value>
            <value>67</value>
            <value>68</value>
            <value>69</value>
            <value>70</value>
          </bin>
          <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
            <value>7</value>
            <value>8</value>
            <value>9</value>
            <value>10</value>
            <value>11</value>
            <value>12</value>
            <value>13</value>
            <value>14</value>
            <value>15</value>
          </bin>
          <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
            <value>0</value>
            <value>1</value>
            <value>2</value>
            <value>3</value>
            <value>4</value>
            <value>5</value>
            <value>6</value>
          </bin>
          <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
            <value>71</value>
            <value>72</value>
            <value>73</value>
            <value>74</value>
            <value>75</value>
            <value>76</value>
            <value>77</value>
            <value>78</value>
            <value>79</value>
            <value>80</value>
            <value>81</value>
            <value>82</value>
            <value>83</value>
            <value>84</value>
            <value>85</value>
            <value>86</value>
            <value>87</value>
            <value>88</value>
            <value>89</value>
            <value>90</value>
            <value>91</value>
            <value>92</value>
            <value>93</value>
            <value>94</value>
            <value>95</value>
            <value>96</value>
            <value>97</value>
            <value>98</value>
            <value>99</value>
            <value>100</value>
            <value>101</value>
          </bin>
          <bin default-name='false' value='&quot;Teens / Young Adults (16 - 25)&quot;'>
            <value>16</value>
            <value>17</value>
            <value>18</value>
            <value>19</value>
            <value>20</value>
            <value>21</value>
            <value>22</value>
            <value>23</value>
            <value>24</value>
            <value>25</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column caption='Fatalities per 100,000' datatype='real' name='[Calculation_1219349647389655054]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Fatalities])/MEDIAN([Population]) *100000' />
      </column>
      <column datatype='integer' name='[Crash ID]' role='dimension' type='ordinal' />
      <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='string' name='[Road User]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[State1]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Population]' derivation='Avg' name='[avg:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Avg' name='[diff:avg:Population:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[diff:avg:Population:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[diff:avg:Population:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[diff:med:Population:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[med:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population]' derivation='Median' name='[med:Population:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Population]' derivation='Median' name='[pcdf:med:Population:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcdf:med:Population:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>&quot;NSW&quot;</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcdf:med:Population:qk:3]' pivot='key' type='quantitative'>
        <table-calc diff-options='Fixed' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>&quot;WA&quot;</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcdf:med:Population:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[pcto:avg:Population:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[pcto:avg:Population:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[pcto:avg:Population:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[pcto:avg:Population:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Avg' name='[pcto:avg:Population:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Count' name='[pcto:cnt:Population:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:10]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State:nk]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State:nk]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='ColumnInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:8]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Pane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk:9]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field' type='PctTotal'>
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' />
          <order field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[pcto:med:Population:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Sum' name='[pcto:sum:Population:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Population]' derivation='Median' name='[rank:med:Population:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[State]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Age Groups,Road User)' hidden='true' name='[Action (Age Groups,Road User)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Age (group)]' />
          <groupfilter function='level-members' level='[Road User]' />
        </groupfilter>
      </group>
      <group caption='Action (Gender,Road User)' hidden='true' name='[Action (Gender,Road User)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Gender]' />
          <groupfilter function='level-members' level='[Road User]' />
        </groupfilter>
      </group>
      <group caption='Action (Road User)' hidden='true' name='[Action (Road User)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Road User]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group name='[Road User &amp; Gender (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Road User]' />
          <groupfilter function='level-members' level='[Gender]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Xeton/Desktop/Macquarie Uni/Repos/MGMT220/Tableau/Aus_Fatal_Crash.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/23/2018 07:55:46 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Age]' value='[Extract].[Age]' />
            <map key='[Articulated Truck  Involvement]' value='[Extract].[Articulated Truck  Involvement]' />
            <map key='[Bus  Involvement]' value='[Extract].[Bus  Involvement]' />
            <map key='[Crash ID (Fatalities)]' value='[Extract].[Crash ID]' />
            <map key='[Crash ID]' value='[Extract].[Crash ID1]' />
            <map key='[Crash Type]' value='[Extract].[Crash Type]' />
            <map key='[Date]' value='[Extract].[Date]' />
            <map key='[Dayweek]' value='[Extract].[Dayweek]' />
            <map key='[Gender]' value='[Extract].[Gender]' />
            <map key='[Number of Fatalities]' value='[Extract].[Number of Fatalities]' />
            <map key='[Population]' value='[Extract].[Population]' />
            <map key='[Rigid Truck  Involvement]' value='[Extract].[Rigid Truck  Involvement]' />
            <map key='[Road User]' value='[Extract].[Road User]' />
            <map key='[Speed Limit]' value='[Extract].[Speed Limit]' />
            <map key='[State]' value='[Extract].[State]' />
            <map key='[Time]' value='[Extract].[Time]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='49249' timestamp-start='2018-09-23 07:55:46.150' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Crash ID1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Crash ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Crash ID1</remote-alias>
              <ordinal>0</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49249</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>1</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dayweek</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Dayweek]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dayweek</remote-alias>
              <ordinal>2</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>342</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Time</remote-name>
              <remote-type>135</remote-type>
              <local-name>[Time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Time</remote-alias>
              <ordinal>4</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>394</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Crash Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Crash Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Crash Type</remote-alias>
              <ordinal>5</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Fatalities</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Fatalities]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Fatalities</remote-alias>
              <ordinal>6</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Bus  Involvement</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Bus  Involvement]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Bus  Involvement</remote-alias>
              <ordinal>7</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rigid Truck  Involvement</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Rigid Truck  Involvement]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rigid Truck  Involvement</remote-alias>
              <ordinal>8</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Articulated Truck  Involvement</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Articulated Truck  Involvement]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Articulated Truck  Involvement</remote-alias>
              <ordinal>9</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Speed Limit</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Speed Limit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Speed Limit</remote-alias>
              <ordinal>10</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>11</ordinal>
              <family>Fatal_Crashes</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Crash ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Crash ID (Fatalities)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Crash ID</remote-alias>
              <ordinal>12</ordinal>
              <family>Fatalities</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49249</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Road User</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Road User]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Road User</remote-alias>
              <ordinal>13</ordinal>
              <family>Fatalities</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>14</ordinal>
              <family>Fatalities</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RAU_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Age</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Age]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Age</remote-alias>
              <ordinal>15</ordinal>
              <family>Fatalities</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>93</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.527708' measure-ordering='alphabetic' measure-percentage='0.472292' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>1997</bucket>
            </map>
            <map to='#499894'>
              <bucket>2017</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1989</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2009</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1993</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2013</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2001</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1998</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2018</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1994</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2014</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>2007</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1990</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2010</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2005</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1995</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2015</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2002</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2003</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2006</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>2008</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1999</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1996</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2016</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1991</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2011</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2004</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2000</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1992</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2012</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;ACT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SA&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;QLD&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VIC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NT&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;TAS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NSW&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;-9&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Unspecified&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[avg:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:avg:Population:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:avg:Population:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:avg:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[diff:med:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[med:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[med:Population:vtsum:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:med:Population:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:med:Population:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:med:Population:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcdf:med:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:avg:Population:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:avg:Population:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:avg:Population:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:avg:Population:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:avg:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:cnt:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:10]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:6]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:7]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:8]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk:9]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:med:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[rank:med:Population:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Calculation_748442005316952067:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Age (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Infants (0 - 6)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adults (37 - 54)&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Adults (26 - 36)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seniors (71+)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Teens / Young Adults (16 - 25)&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Adults (55 - 70)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Children (7 - 15)&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Road User:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bicyclist (includes pillion passengers)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Passenger&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Motorcycle rider&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Motorcycle pillion passenger&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pedestrian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Driver&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;-9&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Crash ID' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Dayweek' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Time' />
        <field-sort-custom-order field='Crash Type' />
        <field-sort-custom-order field='Number of Fatalities' />
        <field-sort-custom-order field='Bus  Involvement' />
        <field-sort-custom-order field='Rigid Truck  Involvement' />
        <field-sort-custom-order field='Articulated Truck  Involvement' />
        <field-sort-custom-order field='Speed Limit' />
        <field-sort-custom-order field='Population' />
        <field-sort-custom-order field='Crash ID (Fatalities)' />
        <field-sort-custom-order field='Road User' />
        <field-sort-custom-order field='Gender' />
        <field-sort-custom-order field='Age' />
        <field-sort-custom-order field='Calculation_2080663073153290248' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
      <datasources>
        <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
      </datasources>
      <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
        <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[Age]' new-bin='true'>
            <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
              <value>26</value>
              <value>27</value>
              <value>28</value>
              <value>29</value>
              <value>30</value>
              <value>31</value>
              <value>32</value>
              <value>33</value>
              <value>34</value>
              <value>35</value>
              <value>36</value>
            </bin>
            <bin default-name='false' value='&quot;Adults (37 - 54)&quot;'>
              <value>37</value>
              <value>38</value>
              <value>39</value>
              <value>40</value>
              <value>41</value>
              <value>42</value>
              <value>43</value>
              <value>44</value>
              <value>45</value>
              <value>46</value>
              <value>47</value>
              <value>48</value>
              <value>49</value>
              <value>50</value>
              <value>51</value>
              <value>52</value>
              <value>53</value>
              <value>54</value>
            </bin>
            <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
              <value>55</value>
              <value>56</value>
              <value>57</value>
              <value>58</value>
              <value>59</value>
              <value>60</value>
              <value>61</value>
              <value>62</value>
              <value>63</value>
              <value>64</value>
              <value>65</value>
              <value>66</value>
              <value>67</value>
              <value>68</value>
              <value>69</value>
              <value>70</value>
            </bin>
            <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
              <value>7</value>
              <value>8</value>
              <value>9</value>
              <value>10</value>
              <value>11</value>
              <value>12</value>
              <value>13</value>
              <value>14</value>
              <value>15</value>
            </bin>
            <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
              <value>0</value>
              <value>1</value>
              <value>2</value>
              <value>3</value>
              <value>4</value>
              <value>5</value>
              <value>6</value>
            </bin>
            <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
              <value>71</value>
              <value>72</value>
              <value>73</value>
              <value>74</value>
              <value>75</value>
              <value>76</value>
              <value>77</value>
              <value>78</value>
              <value>79</value>
              <value>80</value>
              <value>81</value>
              <value>82</value>
              <value>83</value>
              <value>84</value>
              <value>85</value>
              <value>86</value>
              <value>87</value>
              <value>88</value>
              <value>89</value>
              <value>90</value>
              <value>91</value>
              <value>92</value>
              <value>93</value>
              <value>94</value>
              <value>95</value>
              <value>96</value>
              <value>97</value>
              <value>98</value>
              <value>99</value>
              <value>100</value>
              <value>101</value>
            </bin>
            <bin default-name='false' value='&quot;Teens / Young Adults (16 - 25)&quot;'>
              <value>16</value>
              <value>17</value>
              <value>18</value>
              <value>19</value>
              <value>20</value>
              <value>21</value>
              <value>22</value>
              <value>23</value>
              <value>24</value>
              <value>25</value>
            </bin>
          </calculation>
        </column>
        <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
        <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
        <column datatype='string' name='[Road User]' role='dimension' type='nominal' />
        <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]'>
        <groupfilter from='&quot;Adults (26 - 36)&quot;' function='range' level='[Age (group)]' to='&quot;Teens / Young Adults (16 - 25)&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Female&quot;' />
          <groupfilter function='member' level='[none:Gender:nk]' member='&quot;Male&quot;' />
        </groupfilter>
        <target field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]'>
        <groupfilter function='level-members' level='[none:Road User:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]'>
        <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Fatalities by Road User &amp; Gender' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview' type='sheet' worksheet='Fatalities per 100,000 by State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview' />
      </command>
    </action>
    <action caption='Filter 2 (generated) 1' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview (2)' type='sheet' worksheet='Fatalities per 100,000 by State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview (2)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='% Fatalities by Road User &amp; Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 54)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Teens / Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[pcto:sum:Number of Fatalities:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[sum:Number of Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Road User)]'>
            <groupfilter function='level-members' level='[Road User]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' direction='DESC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' />
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' direction='ASC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' />
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (State)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Road User)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:sum:Number of Fatalities:qk]' value='51' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:sum:Number of Fatalities:qk]</cols>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='% Fatalities by Road User &amp; Gender (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 54)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Teens / Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[pcto:sum:Number of Fatalities:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[sum:Number of Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Road User)]'>
            <groupfilter function='level-members' level='[Road User]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' direction='DESC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' />
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' direction='ASC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' />
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (State)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Road User)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:sum:Number of Fatalities:qk]' value='51' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[pcto:sum:Number of Fatalities:qk]</cols>
        <percentages enabled='true' mode='row' />
      </table>
    </worksheet>
    <worksheet name='Fatalities - Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 54)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Teens / Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[sum:Number of Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Infants (0 - 6)&quot;</bucket>
              <bucket>&quot;Children (7 - 15)&quot;</bucket>
              <bucket>&quot;Teens / Young Adults (16 - 25)&quot;</bucket>
              <bucket>&quot;Adults (26 - 36)&quot;</bucket>
              <bucket>&quot;Adults (37 - 54)&quot;</bucket>
              <bucket>&quot;Adults (55 - 70)&quot;</bucket>
              <bucket>&quot;Seniors (71+)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' value='41' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Fatalities by Road User &amp; Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 54)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Teens / Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column datatype='string' name='[Crash Type]' role='dimension' type='nominal' />
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Crash Type]' derivation='None' name='[none:Crash Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[sum:Number of Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]' direction='DESC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' />
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Crash Type:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Fatalities])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Crash Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' direction='DESC' using='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' />
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (State)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Crash Type:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Fatalities per 100,000 by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 54)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Teens / Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Fatalities per 100,000' datatype='real' name='[Calculation_1219349647389655054]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Number of Fatalities])/MEDIAN([Population]) *100000' />
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[usr:Calculation_1219349647389655054:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Road User)]'>
            <groupfilter function='level-members' level='[Road User]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Action (Road User)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State:nk]' />
              <color column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' />
              <geometry column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Latitude (generated)]</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
            <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age]' new-bin='true'>
                <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
                  <value>26</value>
                  <value>27</value>
                  <value>28</value>
                  <value>29</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                  <value>35</value>
                  <value>36</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (37 - 54)&quot;'>
                  <value>37</value>
                  <value>38</value>
                  <value>39</value>
                  <value>40</value>
                  <value>41</value>
                  <value>42</value>
                  <value>43</value>
                  <value>44</value>
                  <value>45</value>
                  <value>46</value>
                  <value>47</value>
                  <value>48</value>
                  <value>49</value>
                  <value>50</value>
                  <value>51</value>
                  <value>52</value>
                  <value>53</value>
                  <value>54</value>
                </bin>
                <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
                  <value>55</value>
                  <value>56</value>
                  <value>57</value>
                  <value>58</value>
                  <value>59</value>
                  <value>60</value>
                  <value>61</value>
                  <value>62</value>
                  <value>63</value>
                  <value>64</value>
                  <value>65</value>
                  <value>66</value>
                  <value>67</value>
                  <value>68</value>
                  <value>69</value>
                  <value>70</value>
                </bin>
                <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
                  <value>7</value>
                  <value>8</value>
                  <value>9</value>
                  <value>10</value>
                  <value>11</value>
                  <value>12</value>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
                  <value>0</value>
                  <value>1</value>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                </bin>
                <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
                  <value>71</value>
                  <value>72</value>
                  <value>73</value>
                  <value>74</value>
                  <value>75</value>
                  <value>76</value>
                  <value>77</value>
                  <value>78</value>
                  <value>79</value>
                  <value>80</value>
                  <value>81</value>
                  <value>82</value>
                  <value>83</value>
                  <value>84</value>
                  <value>85</value>
                  <value>86</value>
                  <value>87</value>
                  <value>88</value>
                  <value>89</value>
                  <value>90</value>
                  <value>91</value>
                  <value>92</value>
                  <value>93</value>
                  <value>94</value>
                  <value>95</value>
                  <value>96</value>
                  <value>97</value>
                  <value>98</value>
                  <value>99</value>
                  <value>100</value>
                  <value>101</value>
                </bin>
                <bin default-name='false' value='&quot;Teens / Young Adults (16 - 25)&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>18</value>
                  <value>19</value>
                  <value>20</value>
                  <value>21</value>
                  <value>22</value>
                  <value>23</value>
                  <value>24</value>
                  <value>25</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
            <column caption='Fatalities per 100,000' datatype='real' name='[Calculation_1219349647389655054]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Number of Fatalities])/MEDIAN([Population]) *100000' />
            </column>
            <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Fatalities]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Road User]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Fatalities]' derivation='Sum' name='[sum:Number of Fatalities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1219349647389655054]' derivation='User' name='[usr:Calculation_1219349647389655054:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</column>
            <column>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]' />
              <text column='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok] / [federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)])</rows>
        <cols>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Overview'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
      </datasources>
      <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
        <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[Age]' new-bin='true'>
            <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
              <value>26</value>
              <value>27</value>
              <value>28</value>
              <value>29</value>
              <value>30</value>
              <value>31</value>
              <value>32</value>
              <value>33</value>
              <value>34</value>
              <value>35</value>
              <value>36</value>
            </bin>
            <bin default-name='false' value='&quot;Adults (37 - 54)&quot;'>
              <value>37</value>
              <value>38</value>
              <value>39</value>
              <value>40</value>
              <value>41</value>
              <value>42</value>
              <value>43</value>
              <value>44</value>
              <value>45</value>
              <value>46</value>
              <value>47</value>
              <value>48</value>
              <value>49</value>
              <value>50</value>
              <value>51</value>
              <value>52</value>
              <value>53</value>
              <value>54</value>
            </bin>
            <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
              <value>55</value>
              <value>56</value>
              <value>57</value>
              <value>58</value>
              <value>59</value>
              <value>60</value>
              <value>61</value>
              <value>62</value>
              <value>63</value>
              <value>64</value>
              <value>65</value>
              <value>66</value>
              <value>67</value>
              <value>68</value>
              <value>69</value>
              <value>70</value>
            </bin>
            <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
              <value>7</value>
              <value>8</value>
              <value>9</value>
              <value>10</value>
              <value>11</value>
              <value>12</value>
              <value>13</value>
              <value>14</value>
              <value>15</value>
            </bin>
            <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
              <value>0</value>
              <value>1</value>
              <value>2</value>
              <value>3</value>
              <value>4</value>
              <value>5</value>
              <value>6</value>
            </bin>
            <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
              <value>71</value>
              <value>72</value>
              <value>73</value>
              <value>74</value>
              <value>75</value>
              <value>76</value>
              <value>77</value>
              <value>78</value>
              <value>79</value>
              <value>80</value>
              <value>81</value>
              <value>82</value>
              <value>83</value>
              <value>84</value>
              <value>85</value>
              <value>86</value>
              <value>87</value>
              <value>88</value>
              <value>89</value>
              <value>90</value>
              <value>91</value>
              <value>92</value>
              <value>93</value>
              <value>94</value>
              <value>95</value>
              <value>96</value>
              <value>97</value>
              <value>98</value>
              <value>99</value>
              <value>100</value>
              <value>101</value>
            </bin>
            <bin default-name='false' value='&quot;Teens / Young Adults (16 - 25)&quot;'>
              <value>16</value>
              <value>17</value>
              <value>18</value>
              <value>19</value>
              <value>20</value>
              <value>21</value>
              <value>22</value>
              <value>23</value>
              <value>24</value>
              <value>25</value>
            </bin>
          </calculation>
        </column>
        <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
        <column datatype='date' datatype-customized='true' name='[Date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
        <column datatype='string' name='[Road User]' role='dimension' type='nominal' />
        <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
        <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='36875' id='7' name='Fatalities by Road User &amp; Gender' w='47200' x='52700' y='62750'>
          <layout-cache minwidth='188' type-h='fixed' type-w='scalable' />
        </zone>
        <zone h='37250' id='12' name='% Fatalities by Road User &amp; Gender' w='52200' x='0' y='62250' />
        <zone h='61250' id='1' name='Fatalities per 100,000 by State' w='52000' x='300' y='1250' />
        <zone h='23500' id='10' name='Fatalities by Road User &amp; Gender' pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='color' w='19300' x='53900' y='12875' />
        <zone h='10125' id='9' mode='radiolist' name='Fatalities by Road User &amp; Gender' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='filter' values='relevant' w='16000' x='81900' y='20750' />
        <zone h='5500' id='11' mode='checkdropdown' name='Fatalities by Road User &amp; Gender' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='filter' values='relevant' w='19100' x='53900' y='4625' />
        <zone h='5500' id='8' mode='checkdropdown' name='Fatalities by Road User &amp; Gender' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' type='filter' values='relevant' w='16000' x='81700' y='6625' />
        <zone h='7750' id='13' mode='slider' name='Fatalities per 100,000 by State' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' type='filter' values='database' w='16000' x='69000' y='39625' />
      </zones>
    </dashboard>
    <dashboard name='Overview (2)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Fatal_Crashes+ (Cleaned_Road_Fatal_Aus2.0)' name='federated.1lduh8b0r2nhek1ffz0l20228ho5' />
      </datasources>
      <datasource-dependencies datasource='federated.1lduh8b0r2nhek1ffz0l20228ho5'>
        <column caption='Age Groups' datatype='string' name='[Age (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[Age]' new-bin='true'>
            <bin default-name='false' value='&quot;Adults (26 - 36)&quot;'>
              <value>26</value>
              <value>27</value>
              <value>28</value>
              <value>29</value>
              <value>30</value>
              <value>31</value>
              <value>32</value>
              <value>33</value>
              <value>34</value>
              <value>35</value>
              <value>36</value>
            </bin>
            <bin default-name='false' value='&quot;Adults (37 - 54)&quot;'>
              <value>37</value>
              <value>38</value>
              <value>39</value>
              <value>40</value>
              <value>41</value>
              <value>42</value>
              <value>43</value>
              <value>44</value>
              <value>45</value>
              <value>46</value>
              <value>47</value>
              <value>48</value>
              <value>49</value>
              <value>50</value>
              <value>51</value>
              <value>52</value>
              <value>53</value>
              <value>54</value>
            </bin>
            <bin default-name='false' value='&quot;Adults (55 - 70)&quot;'>
              <value>55</value>
              <value>56</value>
              <value>57</value>
              <value>58</value>
              <value>59</value>
              <value>60</value>
              <value>61</value>
              <value>62</value>
              <value>63</value>
              <value>64</value>
              <value>65</value>
              <value>66</value>
              <value>67</value>
              <value>68</value>
              <value>69</value>
              <value>70</value>
            </bin>
            <bin default-name='false' value='&quot;Children (7 - 15)&quot;'>
              <value>7</value>
              <value>8</value>
              <value>9</value>
              <value>10</value>
              <value>11</value>
              <value>12</value>
              <value>13</value>
              <value>14</value>
              <value>15</value>
            </bin>
            <bin default-name='false' value='&quot;Infants (0 - 6)&quot;'>
              <value>0</value>
              <value>1</value>
              <value>2</value>
              <value>3</value>
              <value>4</value>
              <value>5</value>
              <value>6</value>
            </bin>
            <bin default-name='false' value='&quot;Seniors (71+)&quot;'>
              <value>71</value>
              <value>72</value>
              <value>73</value>
              <value>74</value>
              <value>75</value>
              <value>76</value>
              <value>77</value>
              <value>78</value>
              <value>79</value>
              <value>80</value>
              <value>81</value>
              <value>82</value>
              <value>83</value>
              <value>84</value>
              <value>85</value>
              <value>86</value>
              <value>87</value>
              <value>88</value>
              <value>89</value>
              <value>90</value>
              <value>91</value>
              <value>92</value>
              <value>93</value>
              <value>94</value>
              <value>95</value>
              <value>96</value>
              <value>97</value>
              <value>98</value>
              <value>99</value>
              <value>100</value>
              <value>101</value>
            </bin>
            <bin default-name='false' value='&quot;Teens / Young Adults (16 - 25)&quot;'>
              <value>16</value>
              <value>17</value>
              <value>18</value>
              <value>19</value>
              <value>20</value>
              <value>21</value>
              <value>22</value>
              <value>23</value>
              <value>24</value>
              <value>25</value>
            </bin>
          </calculation>
        </column>
        <column datatype='integer' name='[Age]' role='measure' type='quantitative' />
        <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
        <column datatype='string' name='[Road User]' role='dimension' type='nominal' />
        <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
        <column-instance column='[Road User]' derivation='None' name='[none:Road User:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone fixed-size='952' h='98000' id='3' is-fixed='true' type='layout-basic' w='87300' x='800' y='1000'>
              <zone h='79125' id='1' name='Fatalities per 100,000 by State' w='43650' x='44450' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18875' id='12' name='% Fatalities by Road User &amp; Gender' w='87300' x='800' y='80125'>
                <layout-cache minwidth='180' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32813' id='14' name='Fatalities by Road User &amp; Gender' w='43650' x='800' y='1000'>
                <layout-cache minwidth='264' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46312' id='15' name='% Fatalities by Road User &amp; Gender (2)' w='43650' x='800' y='33813'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='111' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='11100' x='88100' y='1000'>
              <zone h='8125' id='6' name='Fatalities per 100,000 by State' pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' type='color' w='11100' x='88100' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='8' mode='checkdropdown' name='Fatalities per 100,000 by State' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' type='filter' values='relevant' w='11100' x='88100' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15875' id='9' name='Fatalities per 100,000 by State' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='filter' values='relevant' w='11100' x='88100' y='15625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='25375' id='11' name='Fatalities per 100,000 by State' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='filter' values='relevant' w='11100' x='88100' y='31500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23250' id='13' name='% Fatalities by Road User &amp; Gender' pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='color' w='11100' x='88100' y='56875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Fatalities - Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</field>
                </fields>
                <multibucket>
                  <bucket>1989</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Crash Type:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Date:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Dayweek:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State1:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Year:qk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Fatalities per 100,000 by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Crash Type:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:State:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:ok]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[sum:Number of Fatalities:qk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Fatalities by Road User &amp; Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='filter' values='relevant' />
            <card param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Crash Type:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='% Fatalities by Road User &amp; Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='filter' values='relevant' />
            <card param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Crash Type:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='% Fatalities by Road User &amp; Gender (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='filter' values='relevant' />
            <card param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Age (group)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[Road User &amp; Gender (Combined)]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Crash Type:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Gender:nk]</field>
            <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Overview'>
      <viewpoints>
        <viewpoint name='% Fatalities by Road User &amp; Gender' />
        <viewpoint name='Fatalities by Road User &amp; Gender'>
          <highlight field='[federated.1lduh8b0r2nhek1ffz0l20228ho5].[none:Road User:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Fatalities per 100,000 by State'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
    </window>
    <window class='dashboard' maximized='true' name='Overview (2)'>
      <viewpoints>
        <viewpoint name='% Fatalities by Road User &amp; Gender' />
        <viewpoint name='% Fatalities by Road User &amp; Gender (2)' />
        <viewpoint name='Fatalities by Road User &amp; Gender' />
        <viewpoint name='Fatalities per 100,000 by State'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1lduh8b0r2nhek1ffz0l20228ho5].[usr:Calculation_1219349647389655054:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='163' name='% Fatalities by Road User &amp; Gender' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACjCAYAAADcvBHzAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAANW0lEQVR4nO3df1hU153H8XdyBYdQIj8XUKTERQuYRBAW6oZtSGNt6dKNS7sxurHitBGB
      Zm2T+uy22ejqNq1b3JrHiMI2jkncROsTG0wbSGxsaPRJhAQcyIoQfxElMlQBcQKMA9e7f6AG
      BBtoYX5wvq//vPfOne8d58M5586cM7cYhmEghKJudXcBQriTBEAoTQIglCYBEEqTAAilSQCE
      0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQ
      SpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBGGfd3d3uLsHl7Ha7u0sYMQmAUJoEQCht
      krsLUIF9053uLsHlvKUTJC2AUJoEQChNAiCUNuEDYLXkkvuD/6Vev2GHo5Kt+bnkWqwjOIuN
      8vUWRnKk8C4TPgCQxsIFrdQ0Dk6Ao7Ya599lMM1NVQnPoEAAIDIpgdaaRj6NgIPaaieJSYFu
      rEp4AjVug0YkkdD6Jo16Agka4Kil2pnIPwf28Pb1gzqpe3ErLxxuwu4E39C7+WbBSjKmakPP
      13WC8ud2UFZ3Ad0vnORFq8iZF8IwRwoPp0YAiCAtsZ2yRp2EBA1HbTWkmZnCWwOOmUxo+lLW
      PRiFvw/0dvyekn31ZOTcdcO5dOpffxv/7Cd5usCE1tvB4R27OJiQT8YUV16TGAuKBACCk2bT
      XtaInvAFGo5C0hITXBx4hA98/Dqbn6mlye7s3zRtITbuImLQmY5Te6iSiv2VvDhga1oqZCSO
      91WIsaZMAAhOYnZ7GY29TmocSSwx3bD//AH21Mwi5yfLiTRpgBXL+pZhTtTL5aBvsHZTFlNd
      ULYYX0oMgvsFkzS7nfd+VYUjKYkb3//0OrklLIwgHw3d0capQzWcGvY8M4kPrWDX/iYcOkAv
      Xc1VWM+Mc/liXKjTAtDfDbLtbSTjW0Pe/jD1Pu51/pTV+RfQ/aYzb8nfEMWVYc5iIm2ZmabN
      W1i9145T8yM8dh7ZOanjXr8Ye7cYhmG4u4iJrLu7G71EwuGpFOoCCTGUBEAoTQIglCZjgHHW
      3d3Nbbfd5u4yXMputxMQEODuMkZEWgChNAmAUJoEQChNAiCUptQnwe4iq0J4LmkBhNIkAEJp
      EgChNK8aA9jK17O29OMBW6axcN0aMiNu+pCxembK15cRucaMzHmZWLwqABDloje8UIV0gYTS
      vKwFuBmdtuqX2LbzXc72aATEzWfligeI9Qdb+RZevmjiYmUNZ3s0Qu9dwuLwo5T+poazTl9m
      Zv8bP5wfgawKoSYvC0AzpWtzKb3+7zTySswktldQfjKFgsKlBPnoOJpeo+jVBh5fHAdc5nLA
      /eRtWE6ITyu/fWorVdFmCgq/SxAf8PzmI9jmZxIhq0IoycsCMPwYoLPOysEDezh4YMDGaT7Y
      iAOCSEiJJ8QEMJWoqBlEpc8gCIAw/iqo+eoDZFUIFXlZAIbndDpIXrGVFclDOyG2kZ5EVoVQ
      0oQYBIfF3cmZV3Zh7egFQHe0cay6gc7RnERWhVDShGgBiM4if34xxetWsa1HxzcghjlZD/Ew
      0DPSc8iqEEqSGWHjTFaF8GwTogskxJ9LAiCUJgEQSpMxwDiTVSE8m7QAQmkSAKE0CYBQ2sT4
      IMzDeeuk+NyQWHeXMO6kBRBKkwAIpUkAhNLGJAC28vVYrEM2Yikf8ZeRXU8/R0XREzyam0vu
      kOJHw0a5pXzkX7sWHkWdFsBqGfxGr99PRdgyCreWUGJOBKxYci38JVEQ3kedu0CJZkoGztjS
      rxA9axam63NoEjGXyJQu1bgmALZy/ucNnSltVbx7opUeLZT07/yYpYn+/V2R4iL21l3o/259
      ysM8bk5hClYsP6/Bx1nHu2d7wG8mX/1eHg/E+gPQdaKc53aUUXdBxy88mUWrcpgXogE65yqK
      KdpbxwWnLwExX+NffvT3RFstrG/5OmsyI7BactlWCVBJJUBaHiXmCMotR0gyZxIB6G3VvLRt
      J++e7UELiGP+yhXDPLcTzS8A37D7SXLJCynGmstaAHuznYTFP6BwRhCceZWfvXkcEhOhfj9v
      Rz7CLwpi8NEdtP2xi8nXHuT4HCmPFrI06FYcTQcoevYV6tc9TAL1vP62P9lPPk2BSaO34zA7
      dh0kIT+DzzXs4ZfWOB4pXEmM6Qpdze1cvqGWRHMJJXMtWDBjvv5Hf2Avvp2K8pOkFBSyNMgH
      3dHEa0Wv0vD4YuIclTz/7GnmrCpkZaQJHCfZ98KH4/3yiXHisgAEzb2P9Bn9U9GJjibq2o6Z
      yUS/+DT/2TSb2fGJfPGeuYRc2xc1i/ggHwBMMQvInruFhvOQcLGWQ5UV7K8cNC2dVDLQDh8n
      +cHFxJgANPyjwvEfbbGddVgPHmDP4Fn2+NggznaUSf+US3rk1b6TyR8/dTqSE86Y/Nf5+fnT
      3eOAAb+/7jh9khYt5bMfbLqLnKc20HL8/zh1up5dP32P+/4jn7Qhv2Wt09N99W9572WCvrGW
      TVlDp6U3TJ48ZNuoOZ04klewdUXykLV+9I/7mKTJCkATxZjcBZpydzKX91k41OJAB3o7qnhp
      bxdfTAn77Afb6qlt0QmNS+GeBQvJjIfOa4vLOx3XJ553WPew+6MEkiKAmfGEVuxif1P/89Hb
      RXOVlTPAzKRoqksP0eLQ6Z+w3kr7aC8oLI47z7zCLmsHvQC6g7Zj1TR0gjZtOi2v/ZoPL107
      /4ec7BjtEwhPMTaNd3AGK7/dyub/Xs1OuxPNbzrzluaRETyCx/o6qduxlmeb+ieYz/zq98i7
      lpujL/Pv39+B3elLQEw6yx5d0L9GjymNZeYmNm9ZzV67E80vnNh52eSkghb3II/Yitmyeueg
      QfBISvlUNFn58ykuXseqbT3ovgHEzMnioYeBKQtYfk8xRU/kc0H3Y/rcNAInB47u9RIew4Mn
      xFixWMBs9u5bk948KV6+DCfEBOfB9y8SMZvdXYOY6KQFEErz4DHAxCCT4j2btABCaRIAoTQJ
      gFCaBEAozYNvg04cS15Y6O4SxE1ICyCUJgEQSpMACKXJGGDU+qdcFpcepbVHI/Tur7M8J5PY
      Uc+6EZ5AAjBKesMeflk/h7wNK4k0XaHD+is2PV/Jj/PTGDKHR3g86QKN0vnTnSRlpV/9KVUf
      ghIXk22q5ojD3ZWJP4cEYJQCg6/wzptVXP1FVnq72jC0T2gZ7ieFhceTLtAomdKW8e2mzTz1
      2HbsTg2/8Fjip3TgM6ofJRaeQgLwGWzl61lb+jEAaXklmBP9SVj0IzYu+vSYD557iuYINxUo
      /iISgM8QkbmGksw/cYBeT+2JzzN3BPP/heeRMcBoXbZxprmrf7WI3lYOlbzAR1+aT4KslOKV
      pAUYrclOPti5lsImO07fAGLSzXx/gfR/vJXMCBtn3d3dfPflJe4uQ9yEdIGE0iQAQmkSAKE0
      GQOMM1kVwrNJCyCUJi3AOOvu7nZ3CeJPkM8BXEC1LpA3dfukCySUJgEQSpMACKVJAITS5C6Q
      UJq0AEJpEgChNAmAUJoEQChNAiCUJl+FcKWuE+zbtoU3jveghd7NNwtWkjFVAxw0vPxfFP3u
      HEz9CgX/+i3iri4zZyvfyjtxuWTf4UGTjq0WcrdVDtgwjYXr1pAZ4WXXAWAIF+kxjmx/0ig6
      aDOcRp/R2bjX+MnaUuMjwzCMljJjY0ml0dnXZ3RWlhgby1r6H/LJO8aO3ceMPneWPYw/vrHB
      2FE3zA4vuw7DMAzpArmK4wiHzt/LQ+nh+KBx+6wH+MfYWt4/DdhaCEpN5XZN4/bUVIJabIBO
      w++auCsrDg/7m0lb2yTCh1sGxsuuA2QM4DoXL8LMGQRf36DxhfgILrTrEBFJR1UVl3SdS1VV
      dERGgO0A9eH/QLLHrTrtoKMtiMjhFsLwquvoJ2MAV3Fe5lY/v0GbNG0StpbzkHwf2ZFbWPPo
      dvTPZ/HYqgAq3/IjY0En+zc+QelxnfAv5/HDRQm4/31kx95ZyXO5/WMA34AY5mQvY/nfTkWL
      8KbruMrdfTBltJQZz+w9NWhT3/slRsn7Q3vGPXWvGm+c6jMuvrXJeOZgp9FnfGIc2b7BKP3I
      VcWOVJ/Rc6He+M3GJ43dx4fu9YbrkC6QqwQGwvFTtF/foNN4zEZo8A09Y72B1+un86U7NDov
      +vLXsbej4U/i3DDa2vEwGqaQeLLuj+HEqfODd3nJdUgAXMWURHrYH9h9qJVedC59uI9XTswh
      5Y6BB+mc/u1hAr+SiAmYEujk5IlL6HRhrTlPSPBNzu1Ktjd5dmcVzV3968P3dhzj16+d4c64
      gaNiL7iOq+TboK406HOAVJY8lsO8kE9bAP1cOdvfi+M7D9zRf8dEP8f+TT/3sL5zL61Vu7Hs
      qaLJ7kTzm868pXksSQ65fpfHO66jnwRAKE26QEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJ
      AITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQm
      ARBKkwAIpUkAhNIkAEJpEgChtP8Hv/ONRomhkmgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='% Fatalities by Road User &amp; Gender (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fatalities - Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fatalities by Road User &amp; Gender' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Fatalities per 100,000 by State' width='192'>
      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
      AJKO5v8DsApjyHNyChwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      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
      DVDhpeb/B+FwqJYTxsmtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overview (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29aXAkW3aY9+VSlbUvKBTWxtILel9ev37LLCQliotmhjJHIiWKCtmWqT8K
      WwozbEXYf+Tw/LAUkkMKRzgYYckKiWPFkDQ5lGc4w232eUvvC7ZGY993FFD7kpVZmekf1Vld
      hQYaQAPoBh7qe9EPhay8Sybuufece869V7Asy6JOnROK+LYrUKfO26QuAHVONHUBqHOiqQtA
      nRNNXQDqnGhqBGByZJDHjx8ztxSruSmVSr+UcGjwGamNGJr54vtYLPbSfS/QeDY0uvVXapIf
      /vQ29+8/QjNfXeHBZ0PlD6Us03Pl8qamp1+dyK5z/2Me9g5Wfi/mkjx8+JBH/UM7p302uOM9
      b4NsbI6P7z5kaHSq5vp2fzNTy7GRylW+34jF2OGV70hqY5V7T/oBWJmf5t69+2TUUs1nAKwS
      Tx7c59nY9PafAS0+y+hKdsuycskYDx485OnoJGom9VJ70XIp7OJ2g/S1r33ta/Yv/YNP+cIX
      vkjQ72Vi5Cnjk7P4vC6+8+0/JdjYzPrSDOOTszS1tTMzOYnH48Wyinz7O39GQ7QNo1TALZk8
      6h3EkhRSsQXGJ6cIRdtxSDof/+gjkjmVkNsiXnSSiy0g+YI48qtM5wLcarfoXYLC2iQTM4u0
      tLXwrO8Rs6sJ2psj9D16SP/oJDeuXgYtTt/IBqc7ozzp60M0ikxMzhFpaeFZ30PWUgUULcfM
      yhqC7MLjcvJsdAxTLdDe3Y0IfHrnLp//whdpa44iYPDk4UNShRL59DrT0zPEMwX8TotHfYMs
      rsZoDfnofzqEwxMmHltgZnaJluam3b/tQyA++xSh7R2udEdZXZxlZGQU2eXlL/7kuwiKF7RM
      +ZonzMrCPJ2tDaxnNP7iz/8Uh8uPKJqE/D76Hj8kntVQLJX+oVFktw+fW+Fp70NmZudQAo1s
      LM0wPDZFU2sT40NPSaoGDaEARd1gdnaCM91neNQ7wBc//x537z1mPR6vfO7u6mCq7z7eczeJ
      jQ+RS64S2OJzc3c3ZmqJj/qmUXMZ9FwGb7iB+ZkZQuEQD+/f5fp7n6ct2sDDH/wp4wmVRr+b
      p0+HyBYNFgY/YmBRpa0pSN+TXgolgYZQYNv3VzMCGMUcjx8/ZmFlA6NUQk9MM5120NPTQ/ep
      lsq1ofly77G8sIA7HKWnp4fOtigLC/Pc/vhTBEni3v17xGJrGKaILJZdDe3d53i328twXOJZ
      7wNGp2dxSwIAk0OP+OOfjvL+GZm1lMS7l5p41DtNybCY7htgdOgRvjPvcLarfcsHicXWMBBI
      zzxheFml7/4DVpdnKTrDRIJeTC1NbGWFrFZiaGgcAIFyj/K73/h9pp7cYVm1uP/gPvPLa1x/
      510S8VUe9Q7x4Ycf0Bjy8cmd20iSxL27dxjs7+PSlcv7bsAHwchgL8MTMxilEkgSfYNDnO3p
      4dqlcy+u9feWb1aTzCdK9PT0cOXCGRYW5ll+9oDppMHD+/dZWY9hlErIsgxARtX44HMf8qzv
      Cbfv3EEsxbn7eITRyUXOPf9bBIPBSl0k2YEgKciCVfMZIJW3iAQVfLKD1W0+q8+9UucuXsVb
      SCL7HDzoHWV2bg6Az//Mz/Ks9wGf3n9CW9sprt28hVM0MS2Lvv4B2lrbuHLjFqOP7qBaEg/u
      33/lu6sRAEnxcuvWLU61NDA+OYGiuDAtk3x6g5mFlZpr1eQSMeaWy+rIqa4OLNPk+vXrNIQb
      MLOrjC+lAFiam+buwDSnWyMEnUVEd6SSx9kr7/H+pTaeTcfJJ+Z4+GiYlojAxGISl+zAG21k
      9Ml9pueXywlcEfTkNPfvfUpT22kawg0UE3PEzCAht8jl69eRkWhubgSgVMjgDDSRXVtAdPsA
      aAz5eDo6hd8fINJ6CrcI16/fAEFALMslAY/EvQeP2Uhl6Tx1CtOC69evE44243wuvG+bi9du
      culcN+OT40iSA0EEiSKDwxM116oRSwWGxspqU6C5HZ8MV69fpyEYxilLPHs2AkAqtsL9e3cJ
      N7dzqr0dydXI1fNtNDc3V/KaGh1ianKKiZkFnGjcu/MxoZaOms/Dw8NcuNjBpz/+mEVV4/1t
      PgcEAIHp0SGmEwWamjpJjn1CS887AKwuLiLICpqq4g35GHj4gGejE1iihCxJuANhnvXeI9h0
      ChGD6zeuv/LdCW/FE2xq/ODPf8Dn//pX8DmORiOqszX37t7mc5//4j5zsRgaGubKa4yYaibB
      T+718eVf+vl91mFr3o4A1KlzRKhPg9Y50chvuwJ19oeu65jmficyTy51ATjmmKaJoih7Tqeq
      Kqqq4vF4cDqdmKaJKL6sEJRKpcp99vf5fB5VVQFwuVwIgoDT6USSpNd6BlsLF4Q3bw/WVaAT
      iK7r5PN5DMMgl8thGMZLjU/XdUqlEoIg4HA4aoTD4XBU7i8WiyiK8tqNH8oN/200fqgbwcce
      uwHuhGVZlX/ZbJZSqewutRufy+XC5XIB5VFFEASKxSJOpxNRFF9qoKZpUiqV0DQNn8938A/2
      hqgLwDFnNwJgmiaGYWBZFpqmUSqVsCwLQRAwTbOigkiSRDAYRFVVRFF8qeffCsMwXqv3t8t/
      2xw7Feh15XU/cn6cytwqn3w+Tz6fp7e37A1WFAWXy1X5KUkSbrebQCCAYRg4HA4URdmx8QOV
      eyzL2rUxflQaPxxDI7j49FsI2ZU9p9vOyDvMtPspE38LytVfe720m+qgqipra2v4/X42NjZI
      pVLIsoyiKKiqSktLS0XNsUMgdovdkO1Rxul07irNURGCNyIAsZVFNuJJ2s9cxO+SyOfzeDye
      Le999myIxoCDkruDtoib1ZVVmlteuN31oW/D8pM3Ue23inTqfdinANi9v8vloq2tDUVRWFpa
      oqenp+Y+WZaRZfm1GqSu6xWjeC/CcxQaP7whAShZIhcunKbv0QDBUy2QWaVouclmkxQMJ2GX
      Sc+Vm7gcImouT0Fxkk7Oc+fjCd69eYWHn/4YOdzBzSs9OxdWByg3/kKhgK7rQFm/t2d9LMui
      WCxiWRZOpxNFUfbdIF97pHvLvBEB8Coyo+MLnL10Dm/ATybpJpfPE23wk9MFGoI+UhtruFpa
      OHe2g7wuEHHD5fNnCYaCuKTTCMr2Ia0nnWqDtlAoUCqVKrM88GKmZ3Fxkfb29oq+LggCuq6/
      duO3LGvbhr+V+ndU1J5qjt0skL4yhKDn95zONA1E8fXmql837X7KtBweHC1Xdrwvn89XDFZd
      18lkMkiSVKObi6KIaZqsrKzQ1dWFpmkYhlHJw+1243K5XqsX3zwLZI8uqqoSCoX2nN+b5tgZ
      wZ+ml4gXNvac7iCM4F+/8Zt7SleqiqvfK9U9+KtYWVmhvb290sjteftMJoMsy5W5/VQqRSQS
      wTCMSu8PVGZuRFHcUw9tWRaqquJ2u2uu2w60QCBwJHv8zRyoAKRjK8zFYnR0XyLoeb2sdzKC
      P578MaOx4YOq8p7YqwC8CQKBAJOTk3R2dpLP53E4HCwuLhKNRkkkEhUvr8PhwO121wiW3UBt
      tcnv99d8l8/nKyEOmzsPVVXRNK0y+th56bqOYRgkk0nC4fBL9T1qQnGgAqBrGggC85PD3FvP
      0OAsEmxsY3Y1gc/K4G1uoZhQUbw+tGQSKyhTKMh1I3gf2DM8S0tLeL1eCoUC7e3tOBwOvF5v
      ZcrRtgtsb7CN7QWGsjojyzKaplWEolgsVu6r/meaJn6//6WRw85/K+fcq7TttyUYByoA7kCY
      S+2dJNeWUbwBPLKJrHjokhU8chMOrxdPe4Ds+gJ3xjb48MK7GHUjeF+USiUkSaKtra0m3EHT
      tIqRurnR29hBbNVT0vbskcfjqUlvN3o7Pqg6+K268dtTorZKJklSpY6vMprflm/g2BnBU7EJ
      VEPdc7qDMIIvt1zdU7r92gC7SZtMJmuC2baKrNyu8VuWhcfjqdHjDcNAVVW8Xi9QthHsuf6d
      bChN09A0DVEUK0Jljzr29GsgEEAUxcrzbW7wb1oIjp0RPJuYfuNG8IXo5T03/qPK5sZVPRsE
      L4Lcqnt9QRDQNA1d11EUZVtvryRJlftVVcXlciHLMqZp4nA4cDgc6LpeyUsUxYoN4XK5sCyr
      4rfYjUf5INi3ACwvzBBLFrh69dJrBRbp6RhDC0muXOzBsUUGR8EI/vUbv8nVtlcvrn5b2KPE
      5jiczb3+Vr3q5t4fIJfLYZommUwGj8dDOl3eAUSSpEpj3g5JklAUpXKfZVkVAXM6nWQymUrd
      7H+qqlZUKltQisXivkbPvbDvErSihigIPH18h4LoI700R/vpblRLZG1inJaObkq6jr85RGoj
      h5FdKxvDGQfvv38RS9coWSLP+u6SNb14hTy6aeH3hHg6Nl03gnfA4XBU4nD2gsfjqRi/1dgN
      vFQqVRq/HSpt2xV2fBGUp09FUUSSpIq32TCMSt6iKJLL5XA4HIRCIQzDIJ/PvzQbBS9GEHsk
      sO0R0zQrwXuvUo9eR33atwBEmlrp8vtZmpvGkBUavU68gTC6BYGLAr5AI0Gfi9mFKZKZPJdP
      n31uDIdZWVkhGghw+WI7uTWFguUg7PcgYJDL5OtG8C6RZZlSqVSj5m2emdl8bSuBsdWPaiRJ
      qjjJFEWpqEfVRrCmaZXPm2O8BEGoBN3ZapA9W2Vj112W5Up5hUKhIii2DZHP53G73Tgcjhpn
      X3VZ26HrekWFs410qBvBu6LBHaEl2LrndG/CCLZjevL5fI0BbAtD9Z+3ehbG5/PV6NmWZZFO
      pyuCYZddKpVwOBz4fL5tG9jmntc0zZfWGVRPnxqGgaZpFQPbrnMoFKosxLGNZvu7zVO3siyT
      z+eJRCKvHcgHx9AIblsZOLBwaMflryIGt95prprdemXfFoqiVFQhURRJJpMVw9J2TG1upA6H
      46V87PsAvF4vqqpWes7qqM/N6LqOqqpIkoTT6aRQKFRmpuwpUFEUKzNAgiBgGEbFx2DbA/l8
      HlmWyeVylbzt8jaPZpIkkcvl8Pl8ZLPZyjuoFrbdcGgCsDAzSSpvcOnyedBVNJy4trBy92oE
      H2Q4tHTq/V0JwFFHEISKDm5ZFqFQqNLQ7FmZXC5HsVisNBDb6VWdRyAQIJ/PV4TGxu7N7Xn9
      zdjllkolPB4PiqLULNa3dflisVhZRG+rRdV2g21X2PXZ3OvbglL9nf0shUKhYlB7PJ6KOrUT
      hyYAkuIlbGYZGZ+gKySxkFWwLIPs2hzhlgZMPUxPT0vFCH7a/wjFE8bvcWCZRTJJjfVEglPd
      HSw8uEugsY2eM12HVd3PDLYw2NijnqIolV6yWmevRpZlHA5Hxdnl8Xgqakoul8PpdFa8y9XY
      Syltqr3Attrl8/kq6o8thB6Pp6LO2Av1q2eZBEGgoJVVPFmSUBzOl0YE+3P1tG02m0UQhEqQ
      36tGg0MTALdDQJUjnA14cIgW3Q1Oivk8RsCJISv43X5WVlZoijRyI6yg5xIk8waRkB8Bi8aI
      hi8eItoUoTHgQePNzAt/VrFVnmpv7WZsH4B9n20s2kK01e4Ru8Fu9LZ32M672gZxOp04HI7K
      aFAoFNB0DcM0kJ/bbqZlIgov8qj2cFcLhn3dXg/hdru3d7odNyP4dRdhvwmD9G2UuZddITaH
      G9jqUfV3qVQKy7IqRnK1+iJJEl6vt6Ly7NYo3u77artsKxutqBVJpFNIiAjUbp+iKAorKyu0
      tLRUVJ9qqicBQqFQTUgGvBCUY2cEf3dkiNXc1ocnvIrqP8qt9g7ea+846Kq9NWyHU7XAbCdA
      1Q1lK8+4PX9f3aPa3lpZlithDNt1Qtv1p5uFolgsYhhGJeYok8ng9Xpr6qw4FVoamypToq/K
      f3P51WVlMhkcDkdFHbKNe9M09yYA9+7d41Srj6LZhCxp6PkUoeZT5DNpmpubyOfzZNIZos1N
      iAKsr66imtDgVZC9YRTJIpfcwPJGWB56SvPV8xiqiUvQUfwRXA6Re/fu0RZxUnR24BB1BEMn
      HPRgyl5Cfg9L6RSzqeReqv0SZxoiO990zNjcK29u/K/qkasbu+0Ztmdo7Lyr9wZ6VUjJVuVs
      bvx2eLatltlqz3ZCa/sF7Ma9VYBf9Qiy2UgulUqVWSdJkggEArhcLorF4t6iF0JuB1lTYn1u
      DpegkhL8CNk4smzwZGgKM5dCCkZZW1lgdW6cohREAMYnJojF1llZWsCjCIxNzNHQ1MT4+Dix
      tRhrG6nKDJHPKaEJMtlUktnJKUrA+PjEDscvnVzsP7SqqmQymcoUZHUDqf65lQPM1qmrp3tt
      fdxm88ixlT79qvpVl2Xnsdlpt92oYhvM1ffa8UnV99j13RyuUS241fcpirK3EeD0xcuUSgbd
      zTKr6+tc7QiS1UxK6TTvXjmDojiZm53HMqDt7DXWFmYJNjcT8jrB6cfnasQpw42LEVaXVrh2
      7hzJrEY0HGB1ZYXmlhbOX76MXrJoBdZDnroRvAOqqtY4wXRdr3hZ7Z7bXiVm68GWZVV62urp
      zeqefTsjczs2f2+rSZujUlVVxel01vT0siwTDAZfObJs1bvLslxjv9gNfPOUabUABAK1EQV1
      I/gQ076JMlOpVI0Dq1rdcLvdlfiarTa6snvK7RxHm+fhN+dvY+vzLperEtJQbehCufGpqkqh
      UNhypdiryOVyNT4CeGEEt7a2Vozg6gZfHR5SXX+Xy1UTrnHsjOD83L/DUmf2nM6yLGTvObxd
      /+jgK/UWsXd2sw276l67Ot7GnsKsnut3Op2VBfK2Pm5Hcm42qi2rvNi9ekrUVmNsAxnKDV3T
      tJrI0eqGubkH3gnbQVbt7NtqOtYuQ5blykwVUFnVZudhr3Sz63GgAtD76B6+hhZcskRzUwOD
      I1P0dLVgyl7SG2uoao5wpAUkEUmwyCSTNLa0shHboKPzFALsaAQb+SnM3M7Hmm7Fm1xo8SaR
      ZbmyQa3dEHRdr6g81Z/tBmEYBtlseTZNkiQKhUKlgdl7g9rf2aqFHW5h+wdsA9P+Z9dju1j+
      19nGvTpGqDqeqFgsbhkMZ89UVb8bWZYrRjZQeScOh+OgRwABWU0xl9WIZYo0RUKMj08QaGgg
      n8ziamwhIKqsEMJKzBGPJ5hfyXGmPYwOOKk1gtPxVU51d5TzaGwj5K97gnfCbhR2j+50Ol9q
      kPbOELZg2I3GTmurCPbMSrWKZDvLcrkcU1NTXLp0CVmW8Xg8+9oifTu2sgtsJ5odoGePfH6/
      f9uQaY/HU7Mrdi6XKz/7QVb28rV3UJwOhOkZok2NxNMFzp07h2bJOGQXLU0B0nmNtrAXw9ON
      7PTgDzTiUWTWV1ZorRvBbwS7p98cEGcffCEIAl6vd8ue3DRNkskkpmnS09NTCYt+k6OrrQ41
      NzdjWRZut5vl5eUatWez/WSPTrlcrmIbmKZZN4IPM+1R8gTvFtM0KwFxW83M2GHKDoejEl6w
      l+jLw2BhYQGXouBUFAKBwCvfnX3iTcXO2U/Bpq4yMbPE2XNnsI/MLWpFFOfu/yCmrjI+Nc+Z
      nq2jQe21pTavMoKVxl9Cif7SXh6hziZEUawJeLN7SkmS0HUdWZZxOp1Hzp6am5vj3Vu3gJed
      gNVU20uwTyO4lE4Qag4zNjqFQ5HxKxBLqwQUEafLi1qy2FiZpe1UN4JVRDM95As5Ij4H6aLF
      2e4OSukNMiWRdGKVvCZQTK+hmyLRaCvriSRuh4jHJWNIHlqi4VcawY7A0Vy3e9zY7LW1pzXh
      9QxZgPX1dYLBILlslthajMnJSW7eerfmwO1qlpaWiEQiuypPK+Qx++6w0dVFpLFxT/Xa55a+
      JvNLSRSyDE9Mk0qlEYUSfY/7iMfjjE3NEgwEyeSLNDf6ia3FGHgyQB4ZjyI/j+8QOd1zlrmJ
      UWYXlvEGIoRDXlbnphl4MoAGjA0/ZWm17gl+G1SHSbzuTg3rsXX+/f/8Nf7ob/9j7vzuH5JJ
      plganeD2v/73DPT3k0qWQ1tsT3UsFiMej+9afdQSG1xr8LE+N7Pnur1VGyCdTu95Xjg1+Tvb
      qkDOxl9EadxaBTpuB2RsTrud3XPQNsBhkM1mScTjDN57yOkrl4g2RXl6/xGF//0PKDpEimEv
      Tb/8OTSPgi8cpHd8hIAl8au/9V/uuMFuqVTi/u//R94POOnLGdz49b+PssVi/+04MUbw66Y7
      6mUeBwEA+OTjTxj5/e/QOhbDFMClmWy2IkwBSqKA1hykkM/zuX/5Tzlz5dIr852fm8P85M9p
      9bpIFnUKN3+OrvMXdl2vY3eqwev2qPs5wOE4lXkUWVpcZP3/+AM6h1ZRdBP3Fo0fQLTAaVg4
      11KU3uvh9OWLO+atF/I0usuqWUhxsDzUt6e6Hb+3bJZYXFpFKxbLIbK7SLK6NM96Il1Jsyss
      k0QyiaGrLK9tUNxD2kI2haqbLC/MEk8mKeoGhcLOO1lYlsHMzCwlbe9lHgW22zRr6tOHOJP5
      XTe29RudfPAbv1oT7bkdRi6DxIvgt6C1tw0Mjp0ALC4uQTHP5Pws80urW/Ykm1leWsblctH7
      6C66uTuVxNA1Upkci0urFPMZZmfGyRZ393JNPU0iXWJpeRmXpHH/QT+CY2cDslTU8MgGTyeX
      KmWuxBK7KvNtoaoqjx894lt//Mf85f/9Owzf/qgmiG5xdo7Y17+Ls2Sylba91TWf6ODO1/+I
      8ZHRHcs3cxlEsaoVaGp5U69Ualf1P3bBcE5ZYGEtRWN7M3oui2mBuIMUNETCLCws0hBpJJ/P
      EfDu3BhNs8TywhyNkUZS+SLtzWHyuTyE/DumzaRSrBQsIuEwC4tLNEYayOUKuILeV6bTckkm
      lpM0hwNspFTam8Nkc0d3BJidmeHHP/g+/pLKz/plwo0e9MVRBn6qc/2v/gKCIDDx0T0c6otD
      uavZKrI055L4/H//DyjqOp5dHMAtyI6avDscAkPf+w7q6jJdX/pbRKLRLbeAqaQ/bkZwnVre
      lhGs6zo//MH3CUwN8X5LQ813c5k8fXmLSCjM1Owa3o+HiOReLK551Zph9VoX7/2z/47Wtt1t
      RDYy0MeZqVq933zepGOaCZ//RTo6t48hO3YqUJ23h73uwDAM/vPvf4Pl3oec3mJUy2klrrks
      5IkpWn4wWNP44dVRua7BWR79T/+a+bk54hs77wJuJeMvXROe/2twCOjqq22vugDU2TWSJLG6
      uko2m8UlCPzGuTZCysvqxaVIgNNBH4Jp4SztXcFwzcb4+Lf/OX/+b7+OusPkgZRcf+maHZvk
      EEVKWwhINSdOANRMgkRWJZV+2Uja6ppNMZskp5UY7H1MIvPyHyWVSh9oPY8i/b1P+KM//EO+
      /x/+LwrJOHG1iHxI07VN6wWa/7KfP/uN32b8YS9Qdno9une3Zu2vmSu/d4utT8Exsq/+uxw7
      I3i/rIyN8LTgIFyKcfriTWJrKVL5OIqkkN6Yp7nrMmIxgSi4ML1BOoNOBiaXSKxO8te+/DcY
      Hhol0tzK2FiMpYlnvP/Fn2V+OYZZKhLwyAz0PuPC9ZtE/BIl0Ul8Lc47H3yAcvCh8m+Up/du
      ow485Jd/4RdwPP6YU15lVzNw+yWQLND79W9grEwQE51ET5+rBOdNPn5At+v5i7XAgpfqFFhf
      YGZinO5zW2+tf+JGAIBGr8xGOsW9258yMDhNBjCN8mzL4tIMP/n+j5gYHibc1snC0gLJ5QWc
      kXa8TpHOsxdYnx/jhx/fJtoUZXZ8mL/46acA5PJFoo1Bspks9z/9iLn5RR7du026uP2hEseB
      tdVVWqYGudngY+Qn38clvtzQDhOPLHHGyHE+s8r6wnxl2WVpagSxKlZJ3MK2iDolCqMD2+Zd
      nwU65ryJWaC52Rncn/4FQcWBZpg4pd31mw8G5yn8eHrf5RffbeGXf/4yAIZpMW9KoGt0u3dW
      YCzLYixd4Op//d9uaXyfyBGgzt4wC3m0533+bhv/wfJCv5dEgW7Z3LHxV/fr+ZLJ/OzslvfV
      BaDOK5mfncHz+COiyvEyF6vDuK+HPTwb3FoNqgtAnW0xTZPcwMMtpzqPE5Io0lNY5+GPf8DG
      Jt/C8RLrOodK9ZYq81OTqMN9nNUzcASWP+53CWaHU6QtucDE92ZJvP9znOs5D9QF4MSx1Zbk
      mqYRW1tjo+8Bcj6Dkk/T4lZwSOKRaPwHhSQKXPDIpJ98xKe9D9AjrXUBOGnMzs7S2dnJnU8+
      Jjk3zfkbNyk966XFKnLR6SgrxT73jvkcZwKKg0uayv1Cvi4Ah4lVUkmrEPSVl+jphQya6MH7
      lrxilmURCgbp/bNvcSW3js8jY409QnAIwFHW8w9+FPI7ZToTS7VG8FD/Y+4/HqCYXmN0xj6J
      UeO7/9+3ePy4n+po+OTSPNlN4fEzj++yokIsFiM2t4AKaLkUqdz2Cxvu3ru97Xe3P/oxjx49
      4lH/zlsh3r57D4C+J+UD9Eaf9LGbYzSWZ8a4c+8+g8OTz69YPHlwh8ePHjK/8upgLHXlGY9n
      tj+r4N6de7iU8s/bH/2ElCHz6N7dXdTq4MlkMowM9DP5/e9ytZjA5yj3fUdte5OtOThXVfX0
      aI/PWTsCZPMlRLlE/8BTSnIArbMFp2jiCzdx69YNitkEfSOTWLKCPj9CrnGNDy6dYXyifC36
      PJ+1lRgrI0+RYz1ca/WQcZ1mcug2uUKJazcu8aR/nM7ubs51tWNqeXp7H1MSXAilAu+9d4u+
      vn7eeecd1JLIF27e4Ps//pjYoofxhRiKy8fpliBT84u4g024jAwbWZ2sWj5vNpkoLyDJJpKo
      2RgPHo/R2d2NWEiwns4SaT1NbGoIV+Mp3rlyHhETBBH1+eqjzOIQVvg8wdIykiQyPPCEVDZH
      5/l3Gen9GK+i0Hblc6yOPaaUW8dxroV7n3xE0XLywdU2ftq/xPWrF2mPBtEsEUVW+PALn+PZ
      /R+Tzps4MdDgje5z971v/Wc6GhvoWh7HIYu8WT/u0WLzli81I0B7a4RsKsVy1qvul4QAAB+C
      SURBVOLDK030j5ZHgYXpcR73DhJPJDAsi5nZedraTnHt5i3UzItrNul0mta2Tm7cuomoZclp
      RcbHpnCJGrOreWTRIpPOACA6Pdy8eQstm6ItIHL700+RQuXjiwqZOH/4jf/EuWvvMT69yBc+
      /IBiJsFGfAOQmJ+eZWU9wQfvvYvP5bCfCigvsJYdrkpZoxNjSJKDpYV5Cjq8c6U8CzA5s0A+
      k2BxdppCyQLLwgLOXbrG8NATxkbHcSgu5uemUHxhPrx+hrnVeYqlIO9cvQCZRUaX85jZFZY3
      MvhbummPhgEdWVJAgNs/+gtc7Vc50+QlIAlk3uCxw4vz80Q3FlEWJnFsE7hmWlYlhv5IcohV
      q3kjp7rP0tjcxs/cOMedJ9Oc7WoERK7evMWtm9coaUUQJRpCISIdbYw8fkA6/+KayxfAKUIg
      EKC1u4nBe48xnT68ToWe82cQPQ20hj143K7Kfu8hr4snjx7ibWik7fxNxicmuNpdPsKorfMM
      v/kP/iFLI0/o7mrjzv0HuAINaMXyMZ/BUJCQz83j3j4kZ9lwu3L+NHfu3Ud1e3HrRqWsCz3n
      MS3o6uqq2Ywp0thIIBDE63YjigL+U1cxY8949PgR0eYuzl/owUKku6ujvIWL7CLgbQQjxtOJ
      JXyNnZxv9RJo7iQS9BMN2yvGFPRSATO3xlIakqvzJDIqcRPCb9Dy8vh8tLhkOo6yiv8WOVKx
      QLGlGVZSBtcunX3bVTkQnj25T+PZGzQFnxvB+QQPh+b4wvs3DqyMnWKBYrEYpe99k4hre6Vr
      p1MdX5eHg/PkDyIW6GYzv/zXrrx0fben17yKIzULFG3rJtr2tmtxcFx+98Oa3x2eMF94f2+n
      o+yX9cEnnN2m8W8+QuigMZ+vHnvViZLbnUxj/3tVWut5APR+al8PhfiMY26svnTtIHrO3VB9
      8J59QIVlWWiaVtmF2j7BUdf1ykmO9s7N9mEYetVRR5W8AVEQtwyB3gt1AfgMs7y8jNXS+dL1
      w2j4W2nSxWKx5lQWWwDsU2bs01s0TavZucFe8aXr5Zk9URRe2iPodRr+5oP/oC4An2lM06T9
      ynXWtZePRj1otjol0ul04nK5Ko3f7tVFUaw07lKpVAnNsK/Z+dlxSVgHI7RbqXtHygaoc7As
      zM1hGiU8DW00Zl9WhQ4TWZYrJ9HYv9snOW7eZdreBdq1zaa2RUnCeYCLfqqFoC4An2EkWWK4
      vxfFF6BbNnDLbzYEQwoquH+uvebaTlOOL9QTAbAQEHD6HIwsLCNU/BjPT8G0RG62N+2rjnUB
      +Axz891bPBsc5GwxgUvZ/ZbhB4XP4+B8dOsDMLaj7JCrFhOh8rso1Grs/cn975p3rGyA7TZf
      Paj7j3Ka1ylDkiS+8iu/Qqf76B1ptB2iIGD/V8bC2mQD2Ib0QTiw9j4CGBqa5cApH9wLtZ7n
      qeyQp/qTfwnx8d3n+xoOHjvNvwm073zza5bzuaDBB4FSTZof5X+GNWPr432Mh6v8ZnGOhv/x
      t3ddhk1jcwujbWcIx2aOjRBUTqU3LRAERKF2tt86wNiIGgF4fPsTImcvIusFmpqixBJZvLKJ
      LrlR03FaO7tJxuIEIgHGRubwRaLohQLNTeU/XDGfoWg5QMviCjTitrL0zyS4fraFobE5Ll0o
      e3hnp4ZRTS+tEQ/ecDOJ2CrBgI/FZBaKWVyhJtqaIi9V1oiNwPKTA3v4VzEcObxdmU8bJQyx
      dmZmMX2G+dLWDbQ0sYiuTrx+gaEIxGZeP/0bYnNHUn3afDWiIHIw/f8mAWhr7yTkM7jfv8LM
      3BKeQIDGoA9JKpDaWCfQ1IlugdPhQZRlhHwKl2jSN7FEo8vA6VSQ5AKaapJTlzGKedRUhrll
      mWhDkNXlFXRDx+X14pPCZDIxTNmLYVn4g2GyeZX1RJ6UukrILaGaMg3BnXcIrrM9+XyeM1eu
      MTMzSlcp92YLt6gJshN4WZWxqq5vd/K7ruuVGaTn2R5YPGuNADS0NONwKZxtz9MQbSIWT9PS
      FMHCoqSDVypQcJRPEe/o6MDpkJhbWOF6l494ViPaEAQBeu/d5tSFG7S2tnLmLGTyRbJ5DZ8i
      ISgRPIqDRDyOz+vHH/CTK+VYW1sjnS1w5uxZ8rqAxx/EA88P0ntxenmdveF2u7EsC/HsZbRn
      99/KtiavbqwWCK+uU43Q8EJgcnqJyURmyzzLdsOrSy+WSkcrGG4n9nrm1uscVH1U02x3/243
      xrIsi2d/+HV65MN3itmMxhL0eOVtbQ87nmfz7E7NPdQ2Yet5yxaAJ4k811v3NstUjSgIb28a
      VC8WEZ1K5YDt3dxX/Om/2rMRrL2GEbxVmnnJyR95o1uk2NkI/lzQ4MNgbcOz0wwWL/JU2/4s
      LDVrsjap8XeLs1z/J7+1y6d4GUEQEP1BKLx6t+Q3iSAIW4ayVb/Pzd9uXtDi2OeIduACkFxd
      ZDln0NnoZ2phjZ4zXUCWiYE5hGgbYblIpLWTtbU13E6RmeU40YBCMm9y42q5IQw/7Sfc3EEx
      MY3hPY1DSNLR1vxGjeDNZGQ3w8HdzwxVc9ooURK37nk3Ci6mClsLFkA+aTA3rfJlde61yq7m
      jc8CvWZx1ZtaHbaCcuACsLQWI1UwcFEiFPCyvLJMycjg9yhIDVHS8/0ogSYs00KWHbgUBb/X
      S6S9lVQ8hugK4Ha7WFuepZjLoFAk4j3em8seFYRIM+R3PnTioKk2XquuVnr/V6lIkiSV5/yr
      IljtKNGDmAg6cAE403MRAVALWVRDxqllcQfP4BRl4sl1fP4GAj4XxYyIYVo0RqN4fG5cighK
      uSfU/AFCTZ2EvDKZTI6c/uoy6+yOjqs3WBjr55T7DS0Ps+w2Wh3e8OJ367kQ2LNB4vPGXd3r
      2+rQQYVwb1ZX60bwMUmzXyPYZvinP+Ts+syu798Po7EEpxSBpG5QsgCHgoxJq+O5o6vy//Lv
      tgCIolgJia7p8TfRmyjw7qmWfdWxbgTvMs0dxc9dJbBtmlf1TL/d+fK2MJZl8ePCz27r/a1m
      rl/ln2YGX8sTvBmhuY3V2RGavYcXG1Q0DBYtB44Pf55MJEq0oQHpeXSopmlMf/JDHAsTBGSJ
      gCSUBeH57M5uj1KFg1kr/5aNYImFtSQusUSktZtoQ7mBLc5NEc8WsYoqXefOkt54+0bwmruB
      YU/DzjduQSlc3PL6Yvrstt7fakamc+iJfXiCq3A6FVwHGBWqGyZzDh+Cy41V0hECYdydZzjf
      fXrL0+6dTieXvvw3yefz5JIJPrl3h4bEMlccxgtbYZMKdJi8VSNYEEROd3czOTJAaXUFJ0VE
      VwCH7EBxlYjHi6zGEniP2dbcR5lkPE5op4OVd4FpWSzoIN74PJeuXNtzeo/Hg8fj4Ytf+hUW
      5+eZ/sl3OON1VNYR2yNqStNZLJS4HDyc7RrfqhFcMg1S8QTnzp3FkL0E/WVvbz5hEW1sJ+zx
      4XS5Keyil6yzO7wupbIr3OuyoRlkr3+erp4L+16o4vF4aDt1iieuAFE9i98h1fT6G42d6IkN
      oFaNtA3n/VI3go9JmoMwgmcmJyiMDXE2F9t1uVsx7Wviwpd+dV95bEbXNCb+5A84o74IQkwU
      S1hf/nskfvQdzgq1aqRlWTxJqrxXN4K35yCM4D/yNDIvv7qB7SYcerM3eLs0mz3Dtif4WjHB
      b/6TX9/tY2xJbnKEnh0af9EwWVQCCG4PgjdA0bRILS3QFPST1ku4FYXuL/78vuqxFXqpRMtf
      +RLrf/p7NDpEZl1hQr/4yyQX5+hGZbNXTRAEMkWddFHDsiD4in2PXsVbNYJ1NYvkCZOLLxNp
      PU1zYwiA+ZlJ1tMZRM0k1NKEKDremhE8E2hnzLF//fNV3uBqNnuGbU9wuLC/XhtAae1gJpem
      28hv+f1Cvkii8RS3vvLVmuuaplUiMw3D2PNotxs8Hg+KojApeZAEg+Zf+irBUIiFj77HI8PF
      O0IBZVPYQ6PPQxoZ3TJZi6c5G/bvebeIAw8NXFqLkVqPsbS8hCAKjDwbZGp2Ab/fQ6lkMj3+
      jGRWxbIs/P4A67FY+ef6Oql4jEy+iNPh4PKV8qmAguhEtN7gZpqfYc5du8HZX/27jDoCqKXn
      h01bFoZl8Uzw0Pp3/iHvfvll1cbhcOBwOCpCcFgYhoEabmLAdKG4XMRiMSRJovX9n2HS/fIM
      nAV0hPycaQiSswTG0gWWs1sL93Yc+NNcvvbOtt91AfSUt37b0N2EGqNEW16Or/F7ynvZ3Hjv
      XfRChmypvN+mFL0Ie7AB9rMizKbb04h0ACpQc9BA9u+sAkWc3Zxxv1gMpDpNAqc1ThUPxnsr
      SRLXvvobzE5NUUwnyeZyFA2TW5/7/Eu7Ndi8qRgip9PJ53/lq8TjcUzTZOTH38PnD9Bx7hxT
      0yOgbb8V/c3ntsCj6XlafJ5dhSFNZAp1I/i4pDkoT/BxIZfLMTc8RDGXwd/WQfzRbUKiRaeW
      rtwzmC1xo7t246+8XmJidZ0LIe+Oax/+eDZ2uEbw8sIcwWgrnl2cMpjLpEln0+SLFi0NPmRv
      GEUCvZBFl9x4nBL5b/7WodsA/yhy7sDy+kpjia807j/+/n+d+kcExlX++f/ymwdQq+PBysQo
      jA0gKW4KgTDv/73fQtd1pr/9+3Sp2y9X9Thkrp9qYXh5lY28SoPXg1UqYVgWEhYlq3xEUnfA
      yzsB12EKgM7S0hpuX4DF2XX8AQ/ZQgmvS6aYy+ALBIjnLRylDM0d54gnU3R0dDA/Pw+FOHHL
      w0T/fS5evUExv4Ln1OuFItc5npy98S7ceLfmmsPhIPDFXyT9l39AYAdfxqXWZkzLqjGKbWVn
      aKU8oXAu7D/MbVEEAn4v02PPeDo8TKYo4HM50LQCyVSG1Noi3nAzq4tzJDN5LMsin1rHHYiQ
      SiVZXU9y/sJ5og3Bz9JBhXX2SWNTM4ldDqpbNX6ABq+HqURZlTrEEUCm59IlAG5u+qar68Xn
      9r/ySwAkYirOQASPIEDwFvYu6XohgydQngF4E0bwRX/bvg1nm82G7+vW7VxTI57i1vFEJ418
      Po/n+Wuzm3R1OPV2VGJOBYFWv5ekQ2YonqobwcclzUkzgl/F2IM7tA3fZzhv8E53Z8064e3Y
      vJ7AFpqDHQEsg9nZRZpbm3E9/6OoqorL5aBYBGWL40HT6TSJ9VUcvobKXkC5dALZG2Z9YQqn
      24c3FKkxgv/NATmnDpu9GMGfFt7nduF9Rj7eeuuSf7H0KVe+/jsHWb1jy/kPvsCz2ArpqfLJ
      nluNpLPpHHl/A5eeh1DY92S1EmuN7YiNzSBKBysAi/NzRFvamZudxOEK4pIFtGIWtZjFFKME
      /SLFXA6X1088neXKhXOkUik6uzpZWKma4y3EiYthllZWuPbuB6yv1o3gOrVc/pVf43ShQN+P
      voff68FKJeh2WMiiSFI32GhoY3F5mfGNVX714mkAMlqJwqV3uXD+RajJgQqAS3EyNzOHLxhC
      QkArFjHyKfLIGLkc57ta+Nbt+5y9dJWWhrJzy7IslpdWaWnvrKwJzqSSrGWXaAg1sLCwgttZ
      t4LrvIzb7eb9v/E3gXI7mnw6QGlyhOA7n+PD7tPous7K3CwDDz5hPlfkxs/9PKfPX6jJ40AF
      INLcTuSlbVq6an7723/7b730ENFoOfYl2FD+6T9vG8Ftzz3B5WraRvBuvLNwMJ7g/aTZixFs
      e4Dl094t7/f4D84/8VlEEATOXbsB114cQOhwOOg4e4627tMogwOcOn3m5XR1I/h4pKkbwbsn
      trZGtKn23ADDMBBFkUwmg6IolXd2qJ7golZEcSpgmayubdDcvP3+N+l0mnw2TWNLO/LzFUsb
      a8uIsoLiC+JxSvxv3/9njMaGD7PKh85vd2r0ePbW5/yfg1+he1Lgv/kX/+SQavXZ4u43f49f
      /cf/Q801u+MMBAL89Pe+zvUv/Rc0RCKHKwDxeIx0PIlbMlingXRihEAkQjyRRs8laIi2YAoy
      pyJO0jkVveRgYWGJ7s52QGN0dJprt24RX6sbwXV2zxf/7n8FQCadxh+o3cjAsiw0j5+p4Wc0
      /MzPHvYBGQaBcCtO0aQp7GHk2QDTa3lCfg/BYBBDKzAxPYelFxGcPpKxJWSnwurSIrop4vN5
      WFlZrXuC6+yJSGMj6+vrfPfb3yKZrI0g1XWdaNdpui6UZ4IOdQRobbEN4PL8/qlf+42X7uk6
      A2DhjK1z81atz/j6zXdqjOCu8GlE8c2GQx90Gn+ohKyYe0rT3dpOc31zvD2RS6f569kFNn7/
      37J+84uY4Ubi48OE4is0Z+JkfvnvEI1Gj5cRrOv6llttbIdpmnu6/yin2Xy/KIoIglA3grdB
      VVXm//2/pkORsCzIlAzWiyXO+BQsy2Lqgy9x5ea7x+uQPEmS9tRo7F3G9sJRTfM6ZZxkXC4X
      qbPXObUwhIWFXxYJOModRfXKtmP1RvfaAF6nwRzVNPXGv3dOf/hFnqVVoFbdnLKcpLLlkJNj
      NQLkUxuMzywSCPmRRRl/KELIX3tyjKmrjE9O4nB6yWTzhPxORFkhFGnG79lm5wDLpK//KU0N
      frK6gJFdx99ymtamyLa7VizNz2A5vBRSa0iig3RJ5FRTmEjk5bPNbEafDeD1B4nHk7i9AWSn
      TMDrJxIJ1dxXLGRZiiXxyCYbWR2vbGKIIsl4gY6uVqKvKKPOC/x+P4tFg0t+oeagjZTLx40b
      ZYfZsepWEpkCl7siZHUH6cQGM/NLL90jyg68Hh+WKNIV8aM7nCQ2NphfWtw235mxIWLxJKrl
      wO2UUBQXG2srLC1tf7p6KpUknU7j8gaRJBBKRVaWFllPZLdJYaJrJbLrqzT3XKZUyFLIppmd
      nmHz5teK24fLIaGbIn63E8nhxiFJKLLF6soyy2tH55CLo4zT6aTr6vXyL5aFapj87myCDYen
      cuTWsRKAlmiYseU8l88009HZhWeLvWBKhQzJnErQ62Y5X+JMc5TOri5c2yz4Bui+cI33371O
      yC1hiQ6a2rvobIviVLZP09LcgtvthlIRT7iF092dNIT82y4sBwGvz0u44wzJmTG6Llymo6MD
      v9/D5nktNZtifX0dh8NByRJxSCay4qfzdDfNkfAryqizmYtf+irfSxsUTYvHKZXmG+/R3P0i
      JOJYzQLVeZn6LNDOzEyMszz8FI/fT8fVd2hofLEjd10Ajjl1Adgfx0oFqlPnoKkLQJ0TjfS1
      r33ta2+7EodBcnaIP/5oECc6jY2NLM1NUVA1/uM3/oDzXa1885vfprW9lfVkmrsf/RCPP8B6
      MsfoswHkzDzff7pBfGWShlAD6Y04M0tLJJNJBh8+wB9tYX56EsnpJJfNYul5ljcy/Pkf/z9E
      Tl/nL7/z/9LQEGVucZWR/gdIipv5pTWmRkcpWRq3f/oRhqQgGQVSBYOlmXF8Dc3Ir9EdHdZe
      nSeFz+ybC57q4czcBtPj/ZTkBuLLC1gGvPfOZcLRNnp6ehgdGcM0DQKRRjaWFhicWOJsVzmO
      3CMaZPUMI4NDzD6dxHGmA8Ul0OjzcftPfpeE0oFrdIJf+dKXefLwHqZp0HX5XdpC5aOHVubn
      efR0jHMXujCyCe7c6aPnwlkWl9cIRxtJrS8zNjBPS2cXiYVl/O0XaA3WZ3feNJ9pIzibzZJJ
      xom0drC+OI2noQ3BLBIMBEml0shorGcN3EKRoimimyKNQS8uGUzZRTyRIZ9ZJ+gNI7rdiJJF
      MZPCFYyyPD1OQ1sHzZEwudQ661mDkN9Vzjudwi0LjM+u0dkaIpktkM4UaW+LIghQSCfAFcRp
      5sloAtn4Bj1XruLcaa/4LagbwfvjMy0AJ4G6AOyPuhFc50RTF4A6J5q6ANQ50dQFoM6Jpi4A
      dU40dQGoc6KpC0CdE01dAOqcaOoCUOdEUxeAOieaugDUOdHUBaDOiaYuAHVONHUBqHOiqQtA
      nRNNXQDqnGjqAlDnRFMXgDonmroA1DnR1AWgzommLgB1TjR1AahzoqkLQJ0TTV0A6pxo6gJQ
      50Tzmd0b9KRgGAbFYvFtV+PYUt8asc6Jpq4C1TnR1AWgzommLgB1TjR1AahzoqkRgEx8jaW1
      OGCRTCafXzUZ7H3M48f9lHbILLk0T3anmzYxvzC37XdLc1M8ftJLtqDtmM/c/EK5DokEAJlE
      csf6AlimztP+fgqaUblWyCTo7au9thWlbIylpLqLUuocVWoEYHB4krmpUWZGBlCxD13QWE+q
      3Lp1A7FUZLC/j3g6z53vfpMf3H1MXn1xLbm8QLYEkxOT/Oibf8RHj3tJxhZYTqhk4muMTc8D
      FuPDg6yslwVsYWGO8eGnpHIq8Xj5BPTE80Y8PD7Hu+9c49OPPwLLZOTpAOl8ETWbore3j4Ju
      Yuoq/X39jE3NAtD35AkAY0/6yFaVZeoqA4NDGKZFOpVifn6+/Mz3bhM9c547n94GwFSTfPxw
      mOtXL5HNpNHyGQaHx7CAeGyFgYFnGBZkEmv0PbrLclJlfWWB2cVVTC1HPJFkOZY4zL9ZnQOk
      RgAkq0g2m+bp2CwTfZ8yu54HYGF6nMe9g2iahmEa/OX3vk9b2ymu3byFbL64ZrO2GqO1rZMb
      t25CbpVE0eRB3xC+4ioDz54yMJvG5Sifj25qKi3dPTy6d4/RgSdkcikGh2cAKGTifO97P6C5
      vZMn927T1N3Do3t3KBZVzJLKD374MZ988ikXr1zZ8nghLT5TKevT23foOdvBnftP+Mn3/hx3
      IAJAY3OEb37jGzRGGymULDZmh+m4dJPp8VHGpqa5ffcBZ1p8POwb4dO7D+lpEnk4tsC9h8Nc
      PHcatCT942uk5oZZWZ7lL+8+o7kxdCh/rDoHT40AfPgzf5WQP0RbWxPnTp8inSkP76dO93Dr
      5jWe9T2m9fR5fB4Xkgz5vMpg74tr1ciyST6vUfYyWCzOTDC7kcPtCvOz753nJx99CoAgOXE7
      BCxB4IPP3eI//Yff48atGwC4/Q18+M4lYvEk8MJd8bh3gPMXLqLIIiXDAFOjqJfVFZ9LYj1T
      IKkX8SiRSlmZRIy+wWF8Ph/N7d00Bj0ADE+v8ve/+lf5yd0+XLJApPMCM0NPON1zgWw6wcbq
      IkNjs/h8HiLRKG6XC8PQsSyBQj4PlsnU+DApVcMyTC5cvowo7P2srzpvCasG00okkpZl6tbo
      2MTza4YVjyfLn7SC1T/w1FpPJC3LLFlDA31WvvDiWiGdtIqGZSWTKcs0dGuwb8DK59JWtmhY
      yfUVq//piFUyStbI035rLZ62LMuyMsl1q6+3z8oVS5Zplqzvf/+HldrE44nyz9iqpRmGNTzY
      b6VzRSuX2rCejU5ZyWTKKubT1sDQiJVIpp4/gmGNPO23VuNpy3z+eS2etkpa3up90mul80Ur
      lUxWyrDTpxMbVtGwKnV60ttvFYolS80mrSe9/ZaqG1YymbIsvWAls0UrtjxvTU5OWumCbq0t
      zVnPxqasUjFrpQu6Vef4cKQ8wbGledwNLfhcjrddlTonhCMlAHXqvGnqfoA6J5q6ANQ50dQF
      oM6Jpi4AdU40dQGoc6KpC0CdE82hLonUV4YQ9Py+8zFNA1GUPnP57DWvDUlmQ9zaR3LUns00
      DbwOkVPK/mfZt6pTyvSTMv17y8cwEaXaPn9fApBMJnE7JQzJg0eRUFUVl+tFSIT6038Fy0/2
      U0SdKn7kbuBPPQ1vuxq7psdj8tud+qHkfafwPrcL7+87n30JwPjYGM0NTjSplVIpj9sh4nHJ
      GJKHlmh435WrU+ew2ZcN0BQOIrgClHSV1Po6ksvF6soqur5z/H6dOkeBfY0AXT0Xqn8D4FRL
      c+WKFL0I0v71ScuyEA4gwvKo5bPXvJoUP5eUwKHW6SDz6XBbyP49rpDaZZ0izm7OuCP7zudQ
      Y4EMw0A6AAEolUrI8v7t9aOWz0Hm9VnN5yDz2iqfPeVq5NOMzK1y/nwPji2Up2QySSj0YjFI
      /pu/daKM4H8TaGfM4X7b1Tgx/M7F/W8ItqcRwNSLGJKyZeMHXpoF0nUdUdy/q8E0zc9kPgeZ
      12c1n4PMa6t8DlUFOmov86jlc5B5fVbzOci83rgA1Klz1DlUT3BibYm5hSUsxYtTsGjr6Cbk
      9+wu7foiWc1FZn0OwTSJlZycPxWlpaVlT3XIpeIMjc0QCXvJawLF9TkC3Vc529HCFuvot8XU
      CgwNDWA5w5QKeRSvhGBJdHSfw+9x7qlOmcQa43MbuAR1X8+2PD9DSgPFKpLdx7OtLc2RVC0c
      prqvfHQ1y9DgAKK3kVJ+f++o7/F9PB43GdUCy8LtctLY1EbTHjccGB0awJA9UMxs+a4PNRao
      qJVob44QjERxWkX6hyd3nTbcGEUWwBsI4QqGafXLrK0ssrCyty1HTOD0mdPIDgWf20Fr1xnU
      5BpTz7dR2XU+goQ/4EcrajRHgkSiTVhFjeHJ3T+TzfzCEmoht+9nc7lcpGIxjH0+WyGfJ7W2
      SlHaXz4Ol49ISwcNPmWf78hEEmUMrUi0rZ1QMIjkdDLW189ezd6m5ibS6cy27/pwVSDLYGFp
      jfbWRrSSQDKRoLk5uquksZVFMkUIeSRcgUYkDPKZFN5wdMstULYjk9xgaTXJqfZGCiURv9uJ
      VSpStBwEfbufsTFLGtOzC3R1nWI1lqC1MURJEEkkMjRH9x6eoKoq+UxyX8+mqzmWNzI0Bd1k
      9/FslqEzvxyjKeTdVz72cykOiaW1+L7e0erSPN5wM+n4Gi1t7eiaRjKZpLm5eefEVcRjK0ju
      IEYhteW7rtsAdU409XDoOiea/x9uTVTcJ0bspQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      TZrDPSpeAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
